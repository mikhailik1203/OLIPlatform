// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: oli_messageslib.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "oli_messageslib.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace oli {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* MessageHeaderData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageHeaderData_reflection_ = NULL;
const ::google::protobuf::Descriptor* SsnLogonMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SsnLogonMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SsnHeartBeatMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SsnHeartBeatMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SsnResendRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SsnResendRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SsnSequenceChangeMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SsnSequenceChangeMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SsnLogoutMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SsnLogoutMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SsnRejectMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SsnRejectMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SsnRetransmittedMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SsnRetransmittedMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* InstrumentDetails_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InstrumentDetails_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClntNewOrderRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClntNewOrderRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClntCancelOrderRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClntCancelOrderRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClntReplaceOrderRequestMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClntReplaceOrderRequestMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OMSNewOrderMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OMSNewOrderMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OMSChangeOrderMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OMSChangeOrderMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OMSCancelOrderMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OMSCancelOrderMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OMSOrderStatusMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OMSOrderStatusMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OMSTradeRejectMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OMSTradeRejectMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OMSTradeCorrectRejectMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OMSTradeCorrectRejectMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* MEOrdersMatchedMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MEOrdersMatchedMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OBBookChangeMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OBBookChangeMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* OBBookChangesMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OBBookChangesMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* InstrumentType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OrderSide_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OrderType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OrderStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* OBookChangeType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_oli_5fmessageslib_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_oli_5fmessageslib_2eproto() {
  protobuf_AddDesc_oli_5fmessageslib_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "oli_messageslib.proto");
  GOOGLE_CHECK(file != NULL);
  MessageHeaderData_descriptor_ = file->message_type(0);
  static const int MessageHeaderData_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, protocolversionmajor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, protocolversionminor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, channelid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, msgsequenceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, clientname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, sessionname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, channelname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, messagedata_),
  };
  MessageHeaderData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MessageHeaderData_descriptor_,
      MessageHeaderData::internal_default_instance(),
      MessageHeaderData_offsets_,
      -1,
      -1,
      -1,
      sizeof(MessageHeaderData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageHeaderData, _internal_metadata_));
  SsnLogonMsg_descriptor_ = file->message_type(1);
  static const int SsnLogonMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnLogonMsg, lastreceivedseqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnLogonMsg, nextexpectedseqid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnLogonMsg, heartbeatinterval_),
  };
  SsnLogonMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SsnLogonMsg_descriptor_,
      SsnLogonMsg::internal_default_instance(),
      SsnLogonMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SsnLogonMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnLogonMsg, _internal_metadata_));
  SsnHeartBeatMsg_descriptor_ = file->message_type(2);
  static const int SsnHeartBeatMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnHeartBeatMsg, tst_),
  };
  SsnHeartBeatMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SsnHeartBeatMsg_descriptor_,
      SsnHeartBeatMsg::internal_default_instance(),
      SsnHeartBeatMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SsnHeartBeatMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnHeartBeatMsg, _internal_metadata_));
  SsnResendRequestMsg_descriptor_ = file->message_type(3);
  static const int SsnResendRequestMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnResendRequestMsg, fromsequenceid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnResendRequestMsg, tosequenceid_),
  };
  SsnResendRequestMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SsnResendRequestMsg_descriptor_,
      SsnResendRequestMsg::internal_default_instance(),
      SsnResendRequestMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SsnResendRequestMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnResendRequestMsg, _internal_metadata_));
  SsnSequenceChangeMsg_descriptor_ = file->message_type(4);
  static const int SsnSequenceChangeMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnSequenceChangeMsg, nextexpectedid_),
  };
  SsnSequenceChangeMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SsnSequenceChangeMsg_descriptor_,
      SsnSequenceChangeMsg::internal_default_instance(),
      SsnSequenceChangeMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SsnSequenceChangeMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnSequenceChangeMsg, _internal_metadata_));
  SsnLogoutMsg_descriptor_ = file->message_type(5);
  static const int SsnLogoutMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnLogoutMsg, reason_),
  };
  SsnLogoutMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SsnLogoutMsg_descriptor_,
      SsnLogoutMsg::internal_default_instance(),
      SsnLogoutMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SsnLogoutMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnLogoutMsg, _internal_metadata_));
  SsnRejectMsg_descriptor_ = file->message_type(6);
  static const int SsnRejectMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnRejectMsg, rejectedmsgseqnumid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnRejectMsg, rejectreason_),
  };
  SsnRejectMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SsnRejectMsg_descriptor_,
      SsnRejectMsg::internal_default_instance(),
      SsnRejectMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SsnRejectMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnRejectMsg, _internal_metadata_));
  SsnRetransmittedMsg_descriptor_ = file->message_type(7);
  static const int SsnRetransmittedMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnRetransmittedMsg, msg_),
  };
  SsnRetransmittedMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SsnRetransmittedMsg_descriptor_,
      SsnRetransmittedMsg::internal_default_instance(),
      SsnRetransmittedMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SsnRetransmittedMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SsnRetransmittedMsg, _internal_metadata_));
  InstrumentDetails_descriptor_ = file->message_type(8);
  static const int InstrumentDetails_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstrumentDetails, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstrumentDetails, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstrumentDetails, type_),
  };
  InstrumentDetails_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InstrumentDetails_descriptor_,
      InstrumentDetails::internal_default_instance(),
      InstrumentDetails_offsets_,
      -1,
      -1,
      -1,
      sizeof(InstrumentDetails),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InstrumentDetails, _internal_metadata_));
  ClntNewOrderRequestMsg_descriptor_ = file->message_type(9);
  static const int ClntNewOrderRequestMsg_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, clientrequestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, side_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, qtydigits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, orderqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, pricedigits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, orderprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, instrumentid_),
  };
  ClntNewOrderRequestMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClntNewOrderRequestMsg_descriptor_,
      ClntNewOrderRequestMsg::internal_default_instance(),
      ClntNewOrderRequestMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClntNewOrderRequestMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntNewOrderRequestMsg, _internal_metadata_));
  ClntCancelOrderRequestMsg_descriptor_ = file->message_type(10);
  static const int ClntCancelOrderRequestMsg_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntCancelOrderRequestMsg, clientrequestid_),
  };
  ClntCancelOrderRequestMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClntCancelOrderRequestMsg_descriptor_,
      ClntCancelOrderRequestMsg::internal_default_instance(),
      ClntCancelOrderRequestMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClntCancelOrderRequestMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntCancelOrderRequestMsg, _internal_metadata_));
  ClntReplaceOrderRequestMsg_descriptor_ = file->message_type(11);
  static const int ClntReplaceOrderRequestMsg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, clientrequestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, clientoriginalrequestid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, originalorderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, qtydigits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, neworderqty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, pricedigits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, neworderprice_),
  };
  ClntReplaceOrderRequestMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClntReplaceOrderRequestMsg_descriptor_,
      ClntReplaceOrderRequestMsg::internal_default_instance(),
      ClntReplaceOrderRequestMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClntReplaceOrderRequestMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClntReplaceOrderRequestMsg, _internal_metadata_));
  OMSNewOrderMsg_descriptor_ = file->message_type(12);
  static const int OMSNewOrderMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSNewOrderMsg, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSNewOrderMsg, instrumentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSNewOrderMsg, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSNewOrderMsg, volumeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSNewOrderMsg, side_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSNewOrderMsg, ordtype_),
  };
  OMSNewOrderMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OMSNewOrderMsg_descriptor_,
      OMSNewOrderMsg::internal_default_instance(),
      OMSNewOrderMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OMSNewOrderMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSNewOrderMsg, _internal_metadata_));
  OMSChangeOrderMsg_descriptor_ = file->message_type(13);
  static const int OMSChangeOrderMsg_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, oldorderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, neworderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, instrumentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, oldprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, newprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, oldvolumeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, newvolumeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, side_),
  };
  OMSChangeOrderMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OMSChangeOrderMsg_descriptor_,
      OMSChangeOrderMsg::internal_default_instance(),
      OMSChangeOrderMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OMSChangeOrderMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSChangeOrderMsg, _internal_metadata_));
  OMSCancelOrderMsg_descriptor_ = file->message_type(14);
  static const int OMSCancelOrderMsg_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSCancelOrderMsg, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSCancelOrderMsg, instrumentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSCancelOrderMsg, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSCancelOrderMsg, volumeleft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSCancelOrderMsg, side_),
  };
  OMSCancelOrderMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OMSCancelOrderMsg_descriptor_,
      OMSCancelOrderMsg::internal_default_instance(),
      OMSCancelOrderMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OMSCancelOrderMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSCancelOrderMsg, _internal_metadata_));
  OMSOrderStatusMsg_descriptor_ = file->message_type(15);
  static const int OMSOrderStatusMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSOrderStatusMsg, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSOrderStatusMsg, status_),
  };
  OMSOrderStatusMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OMSOrderStatusMsg_descriptor_,
      OMSOrderStatusMsg::internal_default_instance(),
      OMSOrderStatusMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OMSOrderStatusMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSOrderStatusMsg, _internal_metadata_));
  OMSTradeRejectMsg_descriptor_ = file->message_type(16);
  static const int OMSTradeRejectMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeRejectMsg, tradeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeRejectMsg, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeRejectMsg, rejectreason_),
  };
  OMSTradeRejectMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OMSTradeRejectMsg_descriptor_,
      OMSTradeRejectMsg::internal_default_instance(),
      OMSTradeRejectMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OMSTradeRejectMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeRejectMsg, _internal_metadata_));
  OMSTradeCorrectRejectMsg_descriptor_ = file->message_type(17);
  static const int OMSTradeCorrectRejectMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeCorrectRejectMsg, tradeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeCorrectRejectMsg, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeCorrectRejectMsg, rejectreason_),
  };
  OMSTradeCorrectRejectMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OMSTradeCorrectRejectMsg_descriptor_,
      OMSTradeCorrectRejectMsg::internal_default_instance(),
      OMSTradeCorrectRejectMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OMSTradeCorrectRejectMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OMSTradeCorrectRejectMsg, _internal_metadata_));
  MEOrdersMatchedMsg_descriptor_ = file->message_type(18);
  static const int MEOrdersMatchedMsg_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, instrumentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, matchid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, bidorderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, askorderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, bidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, matchedqty_),
  };
  MEOrdersMatchedMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MEOrdersMatchedMsg_descriptor_,
      MEOrdersMatchedMsg::internal_default_instance(),
      MEOrdersMatchedMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(MEOrdersMatchedMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MEOrdersMatchedMsg, _internal_metadata_));
  OBBookChangeMsg_descriptor_ = file->message_type(19);
  static const int OBBookChangeMsg_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, instrumentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, side_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, prevprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, prevvolume_),
  };
  OBBookChangeMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OBBookChangeMsg_descriptor_,
      OBBookChangeMsg::internal_default_instance(),
      OBBookChangeMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OBBookChangeMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangeMsg, _internal_metadata_));
  OBBookChangesMsg_descriptor_ = file->message_type(20);
  static const int OBBookChangesMsg_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, instrumentid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, bidtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, asktype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, bidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, bidvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, prevbidprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, prevbidvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, askprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, askvolume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, prevaskprice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, prevaskvolume_),
  };
  OBBookChangesMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OBBookChangesMsg_descriptor_,
      OBBookChangesMsg::internal_default_instance(),
      OBBookChangesMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(OBBookChangesMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OBBookChangesMsg, _internal_metadata_));
  MessageType_descriptor_ = file->enum_type(0);
  InstrumentType_descriptor_ = file->enum_type(1);
  OrderSide_descriptor_ = file->enum_type(2);
  OrderType_descriptor_ = file->enum_type(3);
  OrderStatus_descriptor_ = file->enum_type(4);
  OBookChangeType_descriptor_ = file->enum_type(5);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_oli_5fmessageslib_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MessageHeaderData_descriptor_, MessageHeaderData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SsnLogonMsg_descriptor_, SsnLogonMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SsnHeartBeatMsg_descriptor_, SsnHeartBeatMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SsnResendRequestMsg_descriptor_, SsnResendRequestMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SsnSequenceChangeMsg_descriptor_, SsnSequenceChangeMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SsnLogoutMsg_descriptor_, SsnLogoutMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SsnRejectMsg_descriptor_, SsnRejectMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SsnRetransmittedMsg_descriptor_, SsnRetransmittedMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InstrumentDetails_descriptor_, InstrumentDetails::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClntNewOrderRequestMsg_descriptor_, ClntNewOrderRequestMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClntCancelOrderRequestMsg_descriptor_, ClntCancelOrderRequestMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClntReplaceOrderRequestMsg_descriptor_, ClntReplaceOrderRequestMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OMSNewOrderMsg_descriptor_, OMSNewOrderMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OMSChangeOrderMsg_descriptor_, OMSChangeOrderMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OMSCancelOrderMsg_descriptor_, OMSCancelOrderMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OMSOrderStatusMsg_descriptor_, OMSOrderStatusMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OMSTradeRejectMsg_descriptor_, OMSTradeRejectMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OMSTradeCorrectRejectMsg_descriptor_, OMSTradeCorrectRejectMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MEOrdersMatchedMsg_descriptor_, MEOrdersMatchedMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OBBookChangeMsg_descriptor_, OBBookChangeMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OBBookChangesMsg_descriptor_, OBBookChangesMsg::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_oli_5fmessageslib_2eproto() {
  MessageHeaderData_default_instance_.Shutdown();
  delete MessageHeaderData_reflection_;
  SsnLogonMsg_default_instance_.Shutdown();
  delete SsnLogonMsg_reflection_;
  SsnHeartBeatMsg_default_instance_.Shutdown();
  delete SsnHeartBeatMsg_reflection_;
  SsnResendRequestMsg_default_instance_.Shutdown();
  delete SsnResendRequestMsg_reflection_;
  SsnSequenceChangeMsg_default_instance_.Shutdown();
  delete SsnSequenceChangeMsg_reflection_;
  SsnLogoutMsg_default_instance_.Shutdown();
  delete SsnLogoutMsg_reflection_;
  SsnRejectMsg_default_instance_.Shutdown();
  delete SsnRejectMsg_reflection_;
  SsnRetransmittedMsg_default_instance_.Shutdown();
  delete SsnRetransmittedMsg_reflection_;
  InstrumentDetails_default_instance_.Shutdown();
  delete InstrumentDetails_reflection_;
  ClntNewOrderRequestMsg_default_instance_.Shutdown();
  delete ClntNewOrderRequestMsg_reflection_;
  ClntCancelOrderRequestMsg_default_instance_.Shutdown();
  delete ClntCancelOrderRequestMsg_reflection_;
  ClntReplaceOrderRequestMsg_default_instance_.Shutdown();
  delete ClntReplaceOrderRequestMsg_reflection_;
  OMSNewOrderMsg_default_instance_.Shutdown();
  delete OMSNewOrderMsg_reflection_;
  OMSChangeOrderMsg_default_instance_.Shutdown();
  delete OMSChangeOrderMsg_reflection_;
  OMSCancelOrderMsg_default_instance_.Shutdown();
  delete OMSCancelOrderMsg_reflection_;
  OMSOrderStatusMsg_default_instance_.Shutdown();
  delete OMSOrderStatusMsg_reflection_;
  OMSTradeRejectMsg_default_instance_.Shutdown();
  delete OMSTradeRejectMsg_reflection_;
  OMSTradeCorrectRejectMsg_default_instance_.Shutdown();
  delete OMSTradeCorrectRejectMsg_reflection_;
  MEOrdersMatchedMsg_default_instance_.Shutdown();
  delete MEOrdersMatchedMsg_reflection_;
  OBBookChangeMsg_default_instance_.Shutdown();
  delete OBBookChangeMsg_reflection_;
  OBBookChangesMsg_default_instance_.Shutdown();
  delete OBBookChangesMsg_reflection_;
}

void protobuf_InitDefaults_oli_5fmessageslib_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  MessageHeaderData_default_instance_.DefaultConstruct();
  SsnLogonMsg_default_instance_.DefaultConstruct();
  SsnHeartBeatMsg_default_instance_.DefaultConstruct();
  SsnResendRequestMsg_default_instance_.DefaultConstruct();
  SsnSequenceChangeMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SsnLogoutMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SsnRejectMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SsnRetransmittedMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InstrumentDetails_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClntNewOrderRequestMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClntCancelOrderRequestMsg_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClntReplaceOrderRequestMsg_default_instance_.DefaultConstruct();
  OMSNewOrderMsg_default_instance_.DefaultConstruct();
  OMSChangeOrderMsg_default_instance_.DefaultConstruct();
  OMSCancelOrderMsg_default_instance_.DefaultConstruct();
  OMSOrderStatusMsg_default_instance_.DefaultConstruct();
  OMSTradeRejectMsg_default_instance_.DefaultConstruct();
  OMSTradeCorrectRejectMsg_default_instance_.DefaultConstruct();
  MEOrdersMatchedMsg_default_instance_.DefaultConstruct();
  OBBookChangeMsg_default_instance_.DefaultConstruct();
  OBBookChangesMsg_default_instance_.DefaultConstruct();
  MessageHeaderData_default_instance_.get_mutable()->InitAsDefaultInstance();
  SsnLogonMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  SsnHeartBeatMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  SsnResendRequestMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  SsnSequenceChangeMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  SsnLogoutMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  SsnRejectMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  SsnRetransmittedMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  InstrumentDetails_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClntNewOrderRequestMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClntCancelOrderRequestMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClntReplaceOrderRequestMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OMSNewOrderMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OMSChangeOrderMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OMSCancelOrderMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OMSOrderStatusMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OMSTradeRejectMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OMSTradeCorrectRejectMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  MEOrdersMatchedMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OBBookChangeMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  OBBookChangesMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_oli_5fmessageslib_2eproto_once_);
void protobuf_InitDefaults_oli_5fmessageslib_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_oli_5fmessageslib_2eproto_once_,
                 &protobuf_InitDefaults_oli_5fmessageslib_2eproto_impl);
}
void protobuf_AddDesc_oli_5fmessageslib_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025oli_messageslib.proto\022\007oli.msg\"\360\001\n\021Mes"
    "sageHeaderData\022\034\n\024protocolVersionMajor\030\001"
    " \001(\005\022\034\n\024protocolVersionMinor\030\002 \001(\005\022\021\n\tch"
    "annelId\030\003 \001(\005\022\"\n\004type\030\004 \001(\0162\024.oli.msg.Me"
    "ssageType\022\025\n\rmsgSequenceId\030\005 \001(\003\022\022\n\nclie"
    "ntName\030\006 \001(\t\022\023\n\013sessionName\030\007 \001(\t\022\023\n\013cha"
    "nnelName\030\010 \001(\t\022\023\n\013messageData\030\t \001(\014\"^\n\013S"
    "snLogonMsg\022\031\n\021lastReceivedSeqId\030\003 \001(\003\022\031\n"
    "\021nextExpectedSeqId\030\004 \001(\003\022\031\n\021heartBeatInt"
    "erval\030\005 \001(\005\"\036\n\017SsnHeartBeatMsg\022\013\n\003tst\030\003 "
    "\001(\005\"C\n\023SsnResendRequestMsg\022\026\n\016fromSequen"
    "ceId\030\003 \001(\003\022\024\n\014toSequenceId\030\004 \001(\003\".\n\024SsnS"
    "equenceChangeMsg\022\026\n\016nextExpectedId\030\003 \001(\003"
    "\"\036\n\014SsnLogoutMsg\022\016\n\006reason\030\003 \001(\t\"A\n\014SsnR"
    "ejectMsg\022\033\n\023rejectedMsgSeqNumId\030\003 \001(\003\022\024\n"
    "\014rejectReason\030\004 \001(\t\"\"\n\023SsnRetransmittedM"
    "sg\022\013\n\003msg\030\003 \001(\t\"T\n\021InstrumentDetails\022\n\n\002"
    "id\030\002 \001(\004\022\014\n\004name\030\003 \001(\t\022%\n\004type\030\004 \001(\0162\027.o"
    "li.msg.InstrumentType\"\331\001\n\026ClntNewOrderRe"
    "questMsg\022\027\n\017clientRequestId\030\003 \001(\t\022 \n\004sid"
    "e\030\004 \001(\0162\022.oli.msg.OrderSide\022 \n\004type\030\005 \001("
    "\0162\022.oli.msg.OrderType\022\021\n\tqtyDigits\030\006 \001(\r"
    "\022\020\n\010orderQty\030\007 \001(\r\022\023\n\013priceDigits\030\010 \001(\r\022"
    "\022\n\norderPrice\030\t \001(\r\022\024\n\014instrumentId\030\013 \001("
    "\004\"4\n\031ClntCancelOrderRequestMsg\022\027\n\017client"
    "RequestId\030\003 \001(\t\"\303\001\n\032ClntReplaceOrderRequ"
    "estMsg\022\027\n\017clientRequestId\030\003 \001(\t\022\037\n\027clien"
    "tOriginalRequestId\030\004 \001(\t\022\027\n\017originalOrde"
    "rId\030\005 \001(\004\022\021\n\tqtyDigits\030\006 \001(\r\022\023\n\013newOrder"
    "Qty\030\007 \001(\r\022\023\n\013priceDigits\030\010 \001(\r\022\025\n\rnewOrd"
    "erPrice\030\t \001(\r\"\241\001\n\016OMSNewOrderMsg\022\017\n\007orde"
    "rId\030\003 \001(\004\022\024\n\014instrumentId\030\004 \001(\004\022\r\n\005price"
    "\030\005 \001(\r\022\022\n\nvolumeLeft\030\006 \001(\r\022 \n\004side\030\007 \001(\016"
    "2\022.oli.msg.OrderSide\022#\n\007ordType\030\010 \001(\0162\022."
    "oli.msg.OrderType\"\305\001\n\021OMSChangeOrderMsg\022"
    "\022\n\noldOrderId\030\003 \001(\004\022\022\n\nnewOrderId\030\004 \001(\004\022"
    "\024\n\014instrumentId\030\005 \001(\004\022\020\n\010oldPrice\030\006 \001(\r\022"
    "\020\n\010newPrice\030\007 \001(\r\022\025\n\roldVolumeLeft\030\010 \001(\r"
    "\022\025\n\rnewVolumeLeft\030\t \001(\r\022 \n\004side\030\n \001(\0162\022."
    "oli.msg.OrderSide\"\177\n\021OMSCancelOrderMsg\022\017"
    "\n\007orderId\030\003 \001(\004\022\024\n\014instrumentId\030\004 \001(\004\022\r\n"
    "\005price\030\005 \001(\r\022\022\n\nvolumeLeft\030\006 \001(\r\022 \n\004side"
    "\030\007 \001(\0162\022.oli.msg.OrderSide\"J\n\021OMSOrderSt"
    "atusMsg\022\017\n\007orderId\030\003 \001(\004\022$\n\006status\030\007 \001(\016"
    "2\024.oli.msg.OrderStatus\"K\n\021OMSTradeReject"
    "Msg\022\017\n\007tradeId\030\003 \001(\004\022\017\n\007orderId\030\004 \001(\004\022\024\n"
    "\014rejectReason\030\005 \001(\r\"R\n\030OMSTradeCorrectRe"
    "jectMsg\022\017\n\007tradeId\030\003 \001(\004\022\017\n\007orderId\030\004 \001("
    "\004\022\024\n\014rejectReason\030\005 \001(\r\"\233\001\n\022MEOrdersMatc"
    "hedMsg\022\024\n\014instrumentId\030\001 \001(\004\022\017\n\007matchId\030"
    "\002 \001(\004\022\022\n\nbidOrderId\030\003 \001(\004\022\022\n\naskOrderId\030"
    "\004 \001(\004\022\020\n\010bidPrice\030\005 \001(\r\022\020\n\010askPrice\030\006 \001("
    "\r\022\022\n\nmatchedQty\030\007 \001(\r\"\310\001\n\017OBBookChangeMs"
    "g\022\017\n\007orderId\030\002 \001(\004\022&\n\004type\030\003 \001(\0162\030.oli.m"
    "sg.OBookChangeType\022\024\n\014instrumentId\030\004 \001(\004"
    "\022\r\n\005price\030\005 \001(\r\022\016\n\006volume\030\006 \001(\r\022 \n\004side\030"
    "\007 \001(\0162\022.oli.msg.OrderSide\022\021\n\tprevPrice\030\010"
    " \001(\r\022\022\n\nprevVolume\030\t \001(\r\"\242\002\n\020OBBookChang"
    "esMsg\022\024\n\014instrumentId\030\003 \001(\004\022)\n\007bidType\030\004"
    " \001(\0162\030.oli.msg.OBookChangeType\022)\n\007askTyp"
    "e\030\005 \001(\0162\030.oli.msg.OBookChangeType\022\020\n\010bid"
    "Price\030\006 \001(\r\022\021\n\tbidVolume\030\007 \001(\r\022\024\n\014prevBi"
    "dPrice\030\010 \001(\r\022\025\n\rprevBidVolume\030\t \001(\r\022\020\n\010a"
    "skPrice\030\n \001(\r\022\021\n\taskVolume\030\013 \001(\r\022\024\n\014prev"
    "AskPrice\030\014 \001(\r\022\025\n\rprevAskVolume\030\r \001(\r*\216\n"
    "\n\013MessageType\022\027\n\023invalid_messageType\020\000\022\033"
    "\n\027SsnLogonMsg_messageType\020\001\022\037\n\033SsnHeartB"
    "eatMsg_messageType\020\002\022#\n\037SsnResendRequest"
    "Msg_messageType\020\003\022$\n SsnSequenceChangeMs"
    "g_messageType\020\004\022\034\n\030SsnLogoutMsg_messageT"
    "ype\020\005\022\034\n\030SsnRejectMsg_messageType\020\006\022#\n\037S"
    "snRetransmittedMsg_messageType\020\007\022\"\n\036topS"
    "essionLevelMsg_messageType\020c\022#\n\037clntNewO"
    "rderRequest_messageType\020d\022\'\n#clntOrderRe"
    "placeRequest_messageType\020e\022&\n\"clntOrderC"
    "ancelRequest_messageType\020f\022\036\n\031obCancelOr"
    "der_messageType\020\330\004\022\"\n\035obCancelAllOrders_"
    "messageType\020\331\004\022\036\n\031obBookChanges_messageT"
    "ype\020\332\004\022\035\n\030obBookChange_messageType\020\333\004\022\036\n"
    "\031lcOrderCancel_messageType\020\240\006\022\"\n\035lcCance"
    "lAllOrders_messageType\020\241\006\022\037\n\032smSecurityD"
    "ata_messageType\020\350\007\022\037\n\032smSecGroupData_mes"
    "sageType\020\351\007\022\035\n\030smMarketData_messageType\020"
    "\352\007\022%\n smMarketStatusUpdate_messageType\020\353"
    "\007\022\036\n\031umAccountData_messageType\020\260\t\022&\n!umA"
    "ccountStatusUpdate_messageType\020\261\t\022\037\n\032meO"
    "rderMatched_messageType\020\370\n\022\"\n\035pmNewOrder"
    "Request_messageType\020\300\014\022\034\n\027omsNewOrder_me"
    "ssageType\020\210\016\022\037\n\032omsOrderStatus_messageTy"
    "pe\020\211\016\022\037\n\032omsCancelOrder_messageType\020\212\016\022 "
    "\n\033omsReplaceOrder_messageType\020\213\016\022\037\n\032omsT"
    "radeReject_messageType\020\214\016\022&\n!omsTradeCor"
    "rectReject_messageType\020\215\016\022\037\n\032obSubscript"
    "ion_messageType\020\320\017\022\037\n\032mdSubscription_mes"
    "sageType\020\230\021\022 \n\033mdrSubscription_messageTy"
    "pe\020\340\022\022\037\n\032pmNotification_messageType\020\250\024\022\036"
    "\n\031oInstanceStop_messageType\020\360\025\022\026\n\021total_"
    "messageType\020\270\027*D\n\016InstrumentType\022\031\n\025inva"
    "lidInstrumentType\020\000\022\027\n\023stockInstrumentTy"
    "pe\020\001*7\n\tOrderSide\022\017\n\013invalidSide\020\000\022\013\n\007bu"
    "ySide\020\001\022\014\n\010sellSide\020\002*]\n\tOrderType\022\024\n\020in"
    "validOrderType\020\000\022\023\n\017marketOrderType\020\001\022\022\n"
    "\016limitOrderType\020\002\022\021\n\rstopOrderType\020\003*\204\001\n"
    "\013OrderStatus\022\026\n\022invalidOrderStatus\020\000\022\022\n\016"
    "newOrderStatus\020\001\022\027\n\023canceledOrderStatus\020"
    "\002\022\025\n\021filledOrderStatus\020\003\022\031\n\025pendingNewOr"
    "derStatus\020\004*\177\n\017OBookChangeType\022\033\n\027invali"
    "d_OBookChangeType\020\000\022\027\n\023add_OBookChangeTy"
    "pe\020\001\022\032\n\026change_OBookChangeType\020\002\022\032\n\026dele"
    "te_OBookChangeType\020\003b\006proto3", 4388);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "oli_messageslib.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_oli_5fmessageslib_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_oli_5fmessageslib_2eproto_once_);
void protobuf_AddDesc_oli_5fmessageslib_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_oli_5fmessageslib_2eproto_once_,
                 &protobuf_AddDesc_oli_5fmessageslib_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_oli_5fmessageslib_2eproto {
  StaticDescriptorInitializer_oli_5fmessageslib_2eproto() {
    protobuf_AddDesc_oli_5fmessageslib_2eproto();
  }
} static_descriptor_initializer_oli_5fmessageslib_2eproto_;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 99:
    case 100:
    case 101:
    case 102:
    case 600:
    case 601:
    case 602:
    case 603:
    case 800:
    case 801:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1200:
    case 1201:
    case 1400:
    case 1600:
    case 1800:
    case 1801:
    case 1802:
    case 1803:
    case 1804:
    case 1805:
    case 2000:
    case 2200:
    case 2400:
    case 2600:
    case 2800:
    case 3000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InstrumentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstrumentType_descriptor_;
}
bool InstrumentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OrderSide_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderSide_descriptor_;
}
bool OrderSide_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OrderType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderType_descriptor_;
}
bool OrderType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OrderStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderStatus_descriptor_;
}
bool OrderStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OBookChangeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OBookChangeType_descriptor_;
}
bool OBookChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageHeaderData::kProtocolVersionMajorFieldNumber;
const int MessageHeaderData::kProtocolVersionMinorFieldNumber;
const int MessageHeaderData::kChannelIdFieldNumber;
const int MessageHeaderData::kTypeFieldNumber;
const int MessageHeaderData::kMsgSequenceIdFieldNumber;
const int MessageHeaderData::kClientNameFieldNumber;
const int MessageHeaderData::kSessionNameFieldNumber;
const int MessageHeaderData::kChannelNameFieldNumber;
const int MessageHeaderData::kMessageDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageHeaderData::MessageHeaderData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.MessageHeaderData)
}

void MessageHeaderData::InitAsDefaultInstance() {
}

MessageHeaderData::MessageHeaderData(const MessageHeaderData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.MessageHeaderData)
}

void MessageHeaderData::SharedCtor() {
  clientname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channelname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&protocolversionmajor_, 0, reinterpret_cast<char*>(&msgsequenceid_) -
    reinterpret_cast<char*>(&protocolversionmajor_) + sizeof(msgsequenceid_));
  _cached_size_ = 0;
}

MessageHeaderData::~MessageHeaderData() {
  // @@protoc_insertion_point(destructor:oli.msg.MessageHeaderData)
  SharedDtor();
}

void MessageHeaderData::SharedDtor() {
  clientname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channelname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageHeaderData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageHeaderData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageHeaderData_descriptor_;
}

const MessageHeaderData& MessageHeaderData::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MessageHeaderData> MessageHeaderData_default_instance_;

MessageHeaderData* MessageHeaderData::New(::google::protobuf::Arena* arena) const {
  MessageHeaderData* n = new MessageHeaderData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageHeaderData::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.MessageHeaderData)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MessageHeaderData, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MessageHeaderData*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(protocolversionmajor_, msgsequenceid_);
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MessageHeaderData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.MessageHeaderData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 protocolVersionMajor = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protocolversionmajor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_protocolVersionMinor;
        break;
      }

      // optional int32 protocolVersionMinor = 2;
      case 2: {
        if (tag == 16) {
         parse_protocolVersionMinor:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protocolversionminor_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_channelId;
        break;
      }

      // optional int32 channelId = 3;
      case 3: {
        if (tag == 24) {
         parse_channelId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channelid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional .oli.msg.MessageType type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::oli::msg::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgSequenceId;
        break;
      }

      // optional int64 msgSequenceId = 5;
      case 5: {
        if (tag == 40) {
         parse_msgSequenceId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &msgsequenceid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_clientName;
        break;
      }

      // optional string clientName = 6;
      case 6: {
        if (tag == 50) {
         parse_clientName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientname().data(), this->clientname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.MessageHeaderData.clientName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sessionName;
        break;
      }

      // optional string sessionName = 7;
      case 7: {
        if (tag == 58) {
         parse_sessionName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionname().data(), this->sessionname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.MessageHeaderData.sessionName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_channelName;
        break;
      }

      // optional string channelName = 8;
      case 8: {
        if (tag == 66) {
         parse_channelName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channelname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channelname().data(), this->channelname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.MessageHeaderData.channelName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_messageData;
        break;
      }

      // optional bytes messageData = 9;
      case 9: {
        if (tag == 74) {
         parse_messageData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_messagedata()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.MessageHeaderData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.MessageHeaderData)
  return false;
#undef DO_
}

void MessageHeaderData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.MessageHeaderData)
  // optional int32 protocolVersionMajor = 1;
  if (this->protocolversionmajor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->protocolversionmajor(), output);
  }

  // optional int32 protocolVersionMinor = 2;
  if (this->protocolversionminor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->protocolversionminor(), output);
  }

  // optional int32 channelId = 3;
  if (this->channelid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channelid(), output);
  }

  // optional .oli.msg.MessageType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // optional int64 msgSequenceId = 5;
  if (this->msgsequenceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->msgsequenceid(), output);
  }

  // optional string clientName = 6;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.MessageHeaderData.clientName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->clientname(), output);
  }

  // optional string sessionName = 7;
  if (this->sessionname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionname().data(), this->sessionname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.MessageHeaderData.sessionName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sessionname(), output);
  }

  // optional string channelName = 8;
  if (this->channelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channelname().data(), this->channelname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.MessageHeaderData.channelName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->channelname(), output);
  }

  // optional bytes messageData = 9;
  if (this->messagedata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->messagedata(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.MessageHeaderData)
}

::google::protobuf::uint8* MessageHeaderData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.MessageHeaderData)
  // optional int32 protocolVersionMajor = 1;
  if (this->protocolversionmajor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->protocolversionmajor(), target);
  }

  // optional int32 protocolVersionMinor = 2;
  if (this->protocolversionminor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->protocolversionminor(), target);
  }

  // optional int32 channelId = 3;
  if (this->channelid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channelid(), target);
  }

  // optional .oli.msg.MessageType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // optional int64 msgSequenceId = 5;
  if (this->msgsequenceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->msgsequenceid(), target);
  }

  // optional string clientName = 6;
  if (this->clientname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientname().data(), this->clientname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.MessageHeaderData.clientName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->clientname(), target);
  }

  // optional string sessionName = 7;
  if (this->sessionname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionname().data(), this->sessionname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.MessageHeaderData.sessionName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sessionname(), target);
  }

  // optional string channelName = 8;
  if (this->channelname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channelname().data(), this->channelname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.MessageHeaderData.channelName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->channelname(), target);
  }

  // optional bytes messageData = 9;
  if (this->messagedata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->messagedata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.MessageHeaderData)
  return target;
}

size_t MessageHeaderData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.MessageHeaderData)
  size_t total_size = 0;

  // optional int32 protocolVersionMajor = 1;
  if (this->protocolversionmajor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->protocolversionmajor());
  }

  // optional int32 protocolVersionMinor = 2;
  if (this->protocolversionminor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->protocolversionminor());
  }

  // optional int32 channelId = 3;
  if (this->channelid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channelid());
  }

  // optional .oli.msg.MessageType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int64 msgSequenceId = 5;
  if (this->msgsequenceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->msgsequenceid());
  }

  // optional string clientName = 6;
  if (this->clientname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientname());
  }

  // optional string sessionName = 7;
  if (this->sessionname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionname());
  }

  // optional string channelName = 8;
  if (this->channelname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channelname());
  }

  // optional bytes messageData = 9;
  if (this->messagedata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->messagedata());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageHeaderData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.MessageHeaderData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MessageHeaderData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageHeaderData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.MessageHeaderData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.MessageHeaderData)
    UnsafeMergeFrom(*source);
  }
}

void MessageHeaderData::MergeFrom(const MessageHeaderData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.MessageHeaderData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MessageHeaderData::UnsafeMergeFrom(const MessageHeaderData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.protocolversionmajor() != 0) {
    set_protocolversionmajor(from.protocolversionmajor());
  }
  if (from.protocolversionminor() != 0) {
    set_protocolversionminor(from.protocolversionminor());
  }
  if (from.channelid() != 0) {
    set_channelid(from.channelid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.msgsequenceid() != 0) {
    set_msgsequenceid(from.msgsequenceid());
  }
  if (from.clientname().size() > 0) {

    clientname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientname_);
  }
  if (from.sessionname().size() > 0) {

    sessionname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionname_);
  }
  if (from.channelname().size() > 0) {

    channelname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channelname_);
  }
  if (from.messagedata().size() > 0) {

    messagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagedata_);
  }
}

void MessageHeaderData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.MessageHeaderData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageHeaderData::CopyFrom(const MessageHeaderData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.MessageHeaderData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MessageHeaderData::IsInitialized() const {

  return true;
}

void MessageHeaderData::Swap(MessageHeaderData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageHeaderData::InternalSwap(MessageHeaderData* other) {
  std::swap(protocolversionmajor_, other->protocolversionmajor_);
  std::swap(protocolversionminor_, other->protocolversionminor_);
  std::swap(channelid_, other->channelid_);
  std::swap(type_, other->type_);
  std::swap(msgsequenceid_, other->msgsequenceid_);
  clientname_.Swap(&other->clientname_);
  sessionname_.Swap(&other->sessionname_);
  channelname_.Swap(&other->channelname_);
  messagedata_.Swap(&other->messagedata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageHeaderData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageHeaderData_descriptor_;
  metadata.reflection = MessageHeaderData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageHeaderData

// optional int32 protocolVersionMajor = 1;
void MessageHeaderData::clear_protocolversionmajor() {
  protocolversionmajor_ = 0;
}
::google::protobuf::int32 MessageHeaderData::protocolversionmajor() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.protocolVersionMajor)
  return protocolversionmajor_;
}
void MessageHeaderData::set_protocolversionmajor(::google::protobuf::int32 value) {
  
  protocolversionmajor_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.protocolVersionMajor)
}

// optional int32 protocolVersionMinor = 2;
void MessageHeaderData::clear_protocolversionminor() {
  protocolversionminor_ = 0;
}
::google::protobuf::int32 MessageHeaderData::protocolversionminor() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.protocolVersionMinor)
  return protocolversionminor_;
}
void MessageHeaderData::set_protocolversionminor(::google::protobuf::int32 value) {
  
  protocolversionminor_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.protocolVersionMinor)
}

// optional int32 channelId = 3;
void MessageHeaderData::clear_channelid() {
  channelid_ = 0;
}
::google::protobuf::int32 MessageHeaderData::channelid() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.channelId)
  return channelid_;
}
void MessageHeaderData::set_channelid(::google::protobuf::int32 value) {
  
  channelid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.channelId)
}

// optional .oli.msg.MessageType type = 4;
void MessageHeaderData::clear_type() {
  type_ = 0;
}
::oli::msg::MessageType MessageHeaderData::type() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.type)
  return static_cast< ::oli::msg::MessageType >(type_);
}
void MessageHeaderData::set_type(::oli::msg::MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.type)
}

// optional int64 msgSequenceId = 5;
void MessageHeaderData::clear_msgsequenceid() {
  msgsequenceid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MessageHeaderData::msgsequenceid() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.msgSequenceId)
  return msgsequenceid_;
}
void MessageHeaderData::set_msgsequenceid(::google::protobuf::int64 value) {
  
  msgsequenceid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.msgSequenceId)
}

// optional string clientName = 6;
void MessageHeaderData::clear_clientname() {
  clientname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageHeaderData::clientname() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.clientName)
  return clientname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_clientname(const ::std::string& value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.clientName)
}
void MessageHeaderData::set_clientname(const char* value) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.MessageHeaderData.clientName)
}
void MessageHeaderData::set_clientname(const char* value, size_t size) {
  
  clientname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.MessageHeaderData.clientName)
}
::std::string* MessageHeaderData::mutable_clientname() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.MessageHeaderData.clientName)
  return clientname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageHeaderData::release_clientname() {
  // @@protoc_insertion_point(field_release:oli.msg.MessageHeaderData.clientName)
  
  return clientname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_allocated_clientname(::std::string* clientname) {
  if (clientname != NULL) {
    
  } else {
    
  }
  clientname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientname);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.MessageHeaderData.clientName)
}

// optional string sessionName = 7;
void MessageHeaderData::clear_sessionname() {
  sessionname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageHeaderData::sessionname() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.sessionName)
  return sessionname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_sessionname(const ::std::string& value) {
  
  sessionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.sessionName)
}
void MessageHeaderData::set_sessionname(const char* value) {
  
  sessionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.MessageHeaderData.sessionName)
}
void MessageHeaderData::set_sessionname(const char* value, size_t size) {
  
  sessionname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.MessageHeaderData.sessionName)
}
::std::string* MessageHeaderData::mutable_sessionname() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.MessageHeaderData.sessionName)
  return sessionname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageHeaderData::release_sessionname() {
  // @@protoc_insertion_point(field_release:oli.msg.MessageHeaderData.sessionName)
  
  return sessionname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_allocated_sessionname(::std::string* sessionname) {
  if (sessionname != NULL) {
    
  } else {
    
  }
  sessionname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionname);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.MessageHeaderData.sessionName)
}

// optional string channelName = 8;
void MessageHeaderData::clear_channelname() {
  channelname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageHeaderData::channelname() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.channelName)
  return channelname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_channelname(const ::std::string& value) {
  
  channelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.channelName)
}
void MessageHeaderData::set_channelname(const char* value) {
  
  channelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.MessageHeaderData.channelName)
}
void MessageHeaderData::set_channelname(const char* value, size_t size) {
  
  channelname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.MessageHeaderData.channelName)
}
::std::string* MessageHeaderData::mutable_channelname() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.MessageHeaderData.channelName)
  return channelname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageHeaderData::release_channelname() {
  // @@protoc_insertion_point(field_release:oli.msg.MessageHeaderData.channelName)
  
  return channelname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_allocated_channelname(::std::string* channelname) {
  if (channelname != NULL) {
    
  } else {
    
  }
  channelname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channelname);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.MessageHeaderData.channelName)
}

// optional bytes messageData = 9;
void MessageHeaderData::clear_messagedata() {
  messagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MessageHeaderData::messagedata() const {
  // @@protoc_insertion_point(field_get:oli.msg.MessageHeaderData.messageData)
  return messagedata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_messagedata(const ::std::string& value) {
  
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.MessageHeaderData.messageData)
}
void MessageHeaderData::set_messagedata(const char* value) {
  
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.MessageHeaderData.messageData)
}
void MessageHeaderData::set_messagedata(const void* value, size_t size) {
  
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.MessageHeaderData.messageData)
}
::std::string* MessageHeaderData::mutable_messagedata() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.MessageHeaderData.messageData)
  return messagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageHeaderData::release_messagedata() {
  // @@protoc_insertion_point(field_release:oli.msg.MessageHeaderData.messageData)
  
  return messagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageHeaderData::set_allocated_messagedata(::std::string* messagedata) {
  if (messagedata != NULL) {
    
  } else {
    
  }
  messagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagedata);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.MessageHeaderData.messageData)
}

inline const MessageHeaderData* MessageHeaderData::internal_default_instance() {
  return &MessageHeaderData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SsnLogonMsg::kLastReceivedSeqIdFieldNumber;
const int SsnLogonMsg::kNextExpectedSeqIdFieldNumber;
const int SsnLogonMsg::kHeartBeatIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SsnLogonMsg::SsnLogonMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.SsnLogonMsg)
}

void SsnLogonMsg::InitAsDefaultInstance() {
}

SsnLogonMsg::SsnLogonMsg(const SsnLogonMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.SsnLogonMsg)
}

void SsnLogonMsg::SharedCtor() {
  ::memset(&lastreceivedseqid_, 0, reinterpret_cast<char*>(&heartbeatinterval_) -
    reinterpret_cast<char*>(&lastreceivedseqid_) + sizeof(heartbeatinterval_));
  _cached_size_ = 0;
}

SsnLogonMsg::~SsnLogonMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.SsnLogonMsg)
  SharedDtor();
}

void SsnLogonMsg::SharedDtor() {
}

void SsnLogonMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SsnLogonMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SsnLogonMsg_descriptor_;
}

const SsnLogonMsg& SsnLogonMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SsnLogonMsg> SsnLogonMsg_default_instance_;

SsnLogonMsg* SsnLogonMsg::New(::google::protobuf::Arena* arena) const {
  SsnLogonMsg* n = new SsnLogonMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SsnLogonMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.SsnLogonMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SsnLogonMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SsnLogonMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(lastreceivedseqid_, heartbeatinterval_);

#undef ZR_HELPER_
#undef ZR_

}

bool SsnLogonMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.SsnLogonMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 lastReceivedSeqId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lastreceivedseqid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_nextExpectedSeqId;
        break;
      }

      // optional int64 nextExpectedSeqId = 4;
      case 4: {
        if (tag == 32) {
         parse_nextExpectedSeqId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nextexpectedseqid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_heartBeatInterval;
        break;
      }

      // optional int32 heartBeatInterval = 5;
      case 5: {
        if (tag == 40) {
         parse_heartBeatInterval:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heartbeatinterval_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.SsnLogonMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.SsnLogonMsg)
  return false;
#undef DO_
}

void SsnLogonMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.SsnLogonMsg)
  // optional int64 lastReceivedSeqId = 3;
  if (this->lastreceivedseqid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->lastreceivedseqid(), output);
  }

  // optional int64 nextExpectedSeqId = 4;
  if (this->nextexpectedseqid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->nextexpectedseqid(), output);
  }

  // optional int32 heartBeatInterval = 5;
  if (this->heartbeatinterval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->heartbeatinterval(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.SsnLogonMsg)
}

::google::protobuf::uint8* SsnLogonMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.SsnLogonMsg)
  // optional int64 lastReceivedSeqId = 3;
  if (this->lastreceivedseqid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->lastreceivedseqid(), target);
  }

  // optional int64 nextExpectedSeqId = 4;
  if (this->nextexpectedseqid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->nextexpectedseqid(), target);
  }

  // optional int32 heartBeatInterval = 5;
  if (this->heartbeatinterval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->heartbeatinterval(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.SsnLogonMsg)
  return target;
}

size_t SsnLogonMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.SsnLogonMsg)
  size_t total_size = 0;

  // optional int64 lastReceivedSeqId = 3;
  if (this->lastreceivedseqid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lastreceivedseqid());
  }

  // optional int64 nextExpectedSeqId = 4;
  if (this->nextexpectedseqid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nextexpectedseqid());
  }

  // optional int32 heartBeatInterval = 5;
  if (this->heartbeatinterval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->heartbeatinterval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SsnLogonMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.SsnLogonMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SsnLogonMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SsnLogonMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.SsnLogonMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.SsnLogonMsg)
    UnsafeMergeFrom(*source);
  }
}

void SsnLogonMsg::MergeFrom(const SsnLogonMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.SsnLogonMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SsnLogonMsg::UnsafeMergeFrom(const SsnLogonMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.lastreceivedseqid() != 0) {
    set_lastreceivedseqid(from.lastreceivedseqid());
  }
  if (from.nextexpectedseqid() != 0) {
    set_nextexpectedseqid(from.nextexpectedseqid());
  }
  if (from.heartbeatinterval() != 0) {
    set_heartbeatinterval(from.heartbeatinterval());
  }
}

void SsnLogonMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.SsnLogonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SsnLogonMsg::CopyFrom(const SsnLogonMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.SsnLogonMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SsnLogonMsg::IsInitialized() const {

  return true;
}

void SsnLogonMsg::Swap(SsnLogonMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SsnLogonMsg::InternalSwap(SsnLogonMsg* other) {
  std::swap(lastreceivedseqid_, other->lastreceivedseqid_);
  std::swap(nextexpectedseqid_, other->nextexpectedseqid_);
  std::swap(heartbeatinterval_, other->heartbeatinterval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SsnLogonMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SsnLogonMsg_descriptor_;
  metadata.reflection = SsnLogonMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SsnLogonMsg

// optional int64 lastReceivedSeqId = 3;
void SsnLogonMsg::clear_lastreceivedseqid() {
  lastreceivedseqid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SsnLogonMsg::lastreceivedseqid() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnLogonMsg.lastReceivedSeqId)
  return lastreceivedseqid_;
}
void SsnLogonMsg::set_lastreceivedseqid(::google::protobuf::int64 value) {
  
  lastreceivedseqid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnLogonMsg.lastReceivedSeqId)
}

// optional int64 nextExpectedSeqId = 4;
void SsnLogonMsg::clear_nextexpectedseqid() {
  nextexpectedseqid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SsnLogonMsg::nextexpectedseqid() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnLogonMsg.nextExpectedSeqId)
  return nextexpectedseqid_;
}
void SsnLogonMsg::set_nextexpectedseqid(::google::protobuf::int64 value) {
  
  nextexpectedseqid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnLogonMsg.nextExpectedSeqId)
}

// optional int32 heartBeatInterval = 5;
void SsnLogonMsg::clear_heartbeatinterval() {
  heartbeatinterval_ = 0;
}
::google::protobuf::int32 SsnLogonMsg::heartbeatinterval() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnLogonMsg.heartBeatInterval)
  return heartbeatinterval_;
}
void SsnLogonMsg::set_heartbeatinterval(::google::protobuf::int32 value) {
  
  heartbeatinterval_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnLogonMsg.heartBeatInterval)
}

inline const SsnLogonMsg* SsnLogonMsg::internal_default_instance() {
  return &SsnLogonMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SsnHeartBeatMsg::kTstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SsnHeartBeatMsg::SsnHeartBeatMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.SsnHeartBeatMsg)
}

void SsnHeartBeatMsg::InitAsDefaultInstance() {
}

SsnHeartBeatMsg::SsnHeartBeatMsg(const SsnHeartBeatMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.SsnHeartBeatMsg)
}

void SsnHeartBeatMsg::SharedCtor() {
  tst_ = 0;
  _cached_size_ = 0;
}

SsnHeartBeatMsg::~SsnHeartBeatMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.SsnHeartBeatMsg)
  SharedDtor();
}

void SsnHeartBeatMsg::SharedDtor() {
}

void SsnHeartBeatMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SsnHeartBeatMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SsnHeartBeatMsg_descriptor_;
}

const SsnHeartBeatMsg& SsnHeartBeatMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SsnHeartBeatMsg> SsnHeartBeatMsg_default_instance_;

SsnHeartBeatMsg* SsnHeartBeatMsg::New(::google::protobuf::Arena* arena) const {
  SsnHeartBeatMsg* n = new SsnHeartBeatMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SsnHeartBeatMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.SsnHeartBeatMsg)
  tst_ = 0;
}

bool SsnHeartBeatMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.SsnHeartBeatMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tst = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tst_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.SsnHeartBeatMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.SsnHeartBeatMsg)
  return false;
#undef DO_
}

void SsnHeartBeatMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.SsnHeartBeatMsg)
  // optional int32 tst = 3;
  if (this->tst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tst(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.SsnHeartBeatMsg)
}

::google::protobuf::uint8* SsnHeartBeatMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.SsnHeartBeatMsg)
  // optional int32 tst = 3;
  if (this->tst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tst(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.SsnHeartBeatMsg)
  return target;
}

size_t SsnHeartBeatMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.SsnHeartBeatMsg)
  size_t total_size = 0;

  // optional int32 tst = 3;
  if (this->tst() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tst());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SsnHeartBeatMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.SsnHeartBeatMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SsnHeartBeatMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SsnHeartBeatMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.SsnHeartBeatMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.SsnHeartBeatMsg)
    UnsafeMergeFrom(*source);
  }
}

void SsnHeartBeatMsg::MergeFrom(const SsnHeartBeatMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.SsnHeartBeatMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SsnHeartBeatMsg::UnsafeMergeFrom(const SsnHeartBeatMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.tst() != 0) {
    set_tst(from.tst());
  }
}

void SsnHeartBeatMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.SsnHeartBeatMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SsnHeartBeatMsg::CopyFrom(const SsnHeartBeatMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.SsnHeartBeatMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SsnHeartBeatMsg::IsInitialized() const {

  return true;
}

void SsnHeartBeatMsg::Swap(SsnHeartBeatMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SsnHeartBeatMsg::InternalSwap(SsnHeartBeatMsg* other) {
  std::swap(tst_, other->tst_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SsnHeartBeatMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SsnHeartBeatMsg_descriptor_;
  metadata.reflection = SsnHeartBeatMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SsnHeartBeatMsg

// optional int32 tst = 3;
void SsnHeartBeatMsg::clear_tst() {
  tst_ = 0;
}
::google::protobuf::int32 SsnHeartBeatMsg::tst() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnHeartBeatMsg.tst)
  return tst_;
}
void SsnHeartBeatMsg::set_tst(::google::protobuf::int32 value) {
  
  tst_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnHeartBeatMsg.tst)
}

inline const SsnHeartBeatMsg* SsnHeartBeatMsg::internal_default_instance() {
  return &SsnHeartBeatMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SsnResendRequestMsg::kFromSequenceIdFieldNumber;
const int SsnResendRequestMsg::kToSequenceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SsnResendRequestMsg::SsnResendRequestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.SsnResendRequestMsg)
}

void SsnResendRequestMsg::InitAsDefaultInstance() {
}

SsnResendRequestMsg::SsnResendRequestMsg(const SsnResendRequestMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.SsnResendRequestMsg)
}

void SsnResendRequestMsg::SharedCtor() {
  ::memset(&fromsequenceid_, 0, reinterpret_cast<char*>(&tosequenceid_) -
    reinterpret_cast<char*>(&fromsequenceid_) + sizeof(tosequenceid_));
  _cached_size_ = 0;
}

SsnResendRequestMsg::~SsnResendRequestMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.SsnResendRequestMsg)
  SharedDtor();
}

void SsnResendRequestMsg::SharedDtor() {
}

void SsnResendRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SsnResendRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SsnResendRequestMsg_descriptor_;
}

const SsnResendRequestMsg& SsnResendRequestMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SsnResendRequestMsg> SsnResendRequestMsg_default_instance_;

SsnResendRequestMsg* SsnResendRequestMsg::New(::google::protobuf::Arena* arena) const {
  SsnResendRequestMsg* n = new SsnResendRequestMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SsnResendRequestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.SsnResendRequestMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SsnResendRequestMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SsnResendRequestMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(fromsequenceid_, tosequenceid_);

#undef ZR_HELPER_
#undef ZR_

}

bool SsnResendRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.SsnResendRequestMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fromSequenceId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fromsequenceid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_toSequenceId;
        break;
      }

      // optional int64 toSequenceId = 4;
      case 4: {
        if (tag == 32) {
         parse_toSequenceId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tosequenceid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.SsnResendRequestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.SsnResendRequestMsg)
  return false;
#undef DO_
}

void SsnResendRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.SsnResendRequestMsg)
  // optional int64 fromSequenceId = 3;
  if (this->fromsequenceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fromsequenceid(), output);
  }

  // optional int64 toSequenceId = 4;
  if (this->tosequenceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->tosequenceid(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.SsnResendRequestMsg)
}

::google::protobuf::uint8* SsnResendRequestMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.SsnResendRequestMsg)
  // optional int64 fromSequenceId = 3;
  if (this->fromsequenceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fromsequenceid(), target);
  }

  // optional int64 toSequenceId = 4;
  if (this->tosequenceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->tosequenceid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.SsnResendRequestMsg)
  return target;
}

size_t SsnResendRequestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.SsnResendRequestMsg)
  size_t total_size = 0;

  // optional int64 fromSequenceId = 3;
  if (this->fromsequenceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->fromsequenceid());
  }

  // optional int64 toSequenceId = 4;
  if (this->tosequenceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tosequenceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SsnResendRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.SsnResendRequestMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SsnResendRequestMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SsnResendRequestMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.SsnResendRequestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.SsnResendRequestMsg)
    UnsafeMergeFrom(*source);
  }
}

void SsnResendRequestMsg::MergeFrom(const SsnResendRequestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.SsnResendRequestMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SsnResendRequestMsg::UnsafeMergeFrom(const SsnResendRequestMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.fromsequenceid() != 0) {
    set_fromsequenceid(from.fromsequenceid());
  }
  if (from.tosequenceid() != 0) {
    set_tosequenceid(from.tosequenceid());
  }
}

void SsnResendRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.SsnResendRequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SsnResendRequestMsg::CopyFrom(const SsnResendRequestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.SsnResendRequestMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SsnResendRequestMsg::IsInitialized() const {

  return true;
}

void SsnResendRequestMsg::Swap(SsnResendRequestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SsnResendRequestMsg::InternalSwap(SsnResendRequestMsg* other) {
  std::swap(fromsequenceid_, other->fromsequenceid_);
  std::swap(tosequenceid_, other->tosequenceid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SsnResendRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SsnResendRequestMsg_descriptor_;
  metadata.reflection = SsnResendRequestMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SsnResendRequestMsg

// optional int64 fromSequenceId = 3;
void SsnResendRequestMsg::clear_fromsequenceid() {
  fromsequenceid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SsnResendRequestMsg::fromsequenceid() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnResendRequestMsg.fromSequenceId)
  return fromsequenceid_;
}
void SsnResendRequestMsg::set_fromsequenceid(::google::protobuf::int64 value) {
  
  fromsequenceid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnResendRequestMsg.fromSequenceId)
}

// optional int64 toSequenceId = 4;
void SsnResendRequestMsg::clear_tosequenceid() {
  tosequenceid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SsnResendRequestMsg::tosequenceid() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnResendRequestMsg.toSequenceId)
  return tosequenceid_;
}
void SsnResendRequestMsg::set_tosequenceid(::google::protobuf::int64 value) {
  
  tosequenceid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnResendRequestMsg.toSequenceId)
}

inline const SsnResendRequestMsg* SsnResendRequestMsg::internal_default_instance() {
  return &SsnResendRequestMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SsnSequenceChangeMsg::kNextExpectedIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SsnSequenceChangeMsg::SsnSequenceChangeMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.SsnSequenceChangeMsg)
}

void SsnSequenceChangeMsg::InitAsDefaultInstance() {
}

SsnSequenceChangeMsg::SsnSequenceChangeMsg(const SsnSequenceChangeMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.SsnSequenceChangeMsg)
}

void SsnSequenceChangeMsg::SharedCtor() {
  nextexpectedid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

SsnSequenceChangeMsg::~SsnSequenceChangeMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.SsnSequenceChangeMsg)
  SharedDtor();
}

void SsnSequenceChangeMsg::SharedDtor() {
}

void SsnSequenceChangeMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SsnSequenceChangeMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SsnSequenceChangeMsg_descriptor_;
}

const SsnSequenceChangeMsg& SsnSequenceChangeMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SsnSequenceChangeMsg> SsnSequenceChangeMsg_default_instance_;

SsnSequenceChangeMsg* SsnSequenceChangeMsg::New(::google::protobuf::Arena* arena) const {
  SsnSequenceChangeMsg* n = new SsnSequenceChangeMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SsnSequenceChangeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.SsnSequenceChangeMsg)
  nextexpectedid_ = GOOGLE_LONGLONG(0);
}

bool SsnSequenceChangeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.SsnSequenceChangeMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 nextExpectedId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &nextexpectedid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.SsnSequenceChangeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.SsnSequenceChangeMsg)
  return false;
#undef DO_
}

void SsnSequenceChangeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.SsnSequenceChangeMsg)
  // optional int64 nextExpectedId = 3;
  if (this->nextexpectedid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->nextexpectedid(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.SsnSequenceChangeMsg)
}

::google::protobuf::uint8* SsnSequenceChangeMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.SsnSequenceChangeMsg)
  // optional int64 nextExpectedId = 3;
  if (this->nextexpectedid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->nextexpectedid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.SsnSequenceChangeMsg)
  return target;
}

size_t SsnSequenceChangeMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.SsnSequenceChangeMsg)
  size_t total_size = 0;

  // optional int64 nextExpectedId = 3;
  if (this->nextexpectedid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->nextexpectedid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SsnSequenceChangeMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.SsnSequenceChangeMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SsnSequenceChangeMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SsnSequenceChangeMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.SsnSequenceChangeMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.SsnSequenceChangeMsg)
    UnsafeMergeFrom(*source);
  }
}

void SsnSequenceChangeMsg::MergeFrom(const SsnSequenceChangeMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.SsnSequenceChangeMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SsnSequenceChangeMsg::UnsafeMergeFrom(const SsnSequenceChangeMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nextexpectedid() != 0) {
    set_nextexpectedid(from.nextexpectedid());
  }
}

void SsnSequenceChangeMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.SsnSequenceChangeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SsnSequenceChangeMsg::CopyFrom(const SsnSequenceChangeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.SsnSequenceChangeMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SsnSequenceChangeMsg::IsInitialized() const {

  return true;
}

void SsnSequenceChangeMsg::Swap(SsnSequenceChangeMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SsnSequenceChangeMsg::InternalSwap(SsnSequenceChangeMsg* other) {
  std::swap(nextexpectedid_, other->nextexpectedid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SsnSequenceChangeMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SsnSequenceChangeMsg_descriptor_;
  metadata.reflection = SsnSequenceChangeMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SsnSequenceChangeMsg

// optional int64 nextExpectedId = 3;
void SsnSequenceChangeMsg::clear_nextexpectedid() {
  nextexpectedid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SsnSequenceChangeMsg::nextexpectedid() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnSequenceChangeMsg.nextExpectedId)
  return nextexpectedid_;
}
void SsnSequenceChangeMsg::set_nextexpectedid(::google::protobuf::int64 value) {
  
  nextexpectedid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnSequenceChangeMsg.nextExpectedId)
}

inline const SsnSequenceChangeMsg* SsnSequenceChangeMsg::internal_default_instance() {
  return &SsnSequenceChangeMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SsnLogoutMsg::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SsnLogoutMsg::SsnLogoutMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.SsnLogoutMsg)
}

void SsnLogoutMsg::InitAsDefaultInstance() {
}

SsnLogoutMsg::SsnLogoutMsg(const SsnLogoutMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.SsnLogoutMsg)
}

void SsnLogoutMsg::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SsnLogoutMsg::~SsnLogoutMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.SsnLogoutMsg)
  SharedDtor();
}

void SsnLogoutMsg::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SsnLogoutMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SsnLogoutMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SsnLogoutMsg_descriptor_;
}

const SsnLogoutMsg& SsnLogoutMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SsnLogoutMsg> SsnLogoutMsg_default_instance_;

SsnLogoutMsg* SsnLogoutMsg::New(::google::protobuf::Arena* arena) const {
  SsnLogoutMsg* n = new SsnLogoutMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SsnLogoutMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.SsnLogoutMsg)
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SsnLogoutMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.SsnLogoutMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string reason = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), this->reason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.SsnLogoutMsg.reason"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.SsnLogoutMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.SsnLogoutMsg)
  return false;
#undef DO_
}

void SsnLogoutMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.SsnLogoutMsg)
  // optional string reason = 3;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.SsnLogoutMsg.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reason(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.SsnLogoutMsg)
}

::google::protobuf::uint8* SsnLogoutMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.SsnLogoutMsg)
  // optional string reason = 3;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), this->reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.SsnLogoutMsg.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.SsnLogoutMsg)
  return target;
}

size_t SsnLogoutMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.SsnLogoutMsg)
  size_t total_size = 0;

  // optional string reason = 3;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SsnLogoutMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.SsnLogoutMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SsnLogoutMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SsnLogoutMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.SsnLogoutMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.SsnLogoutMsg)
    UnsafeMergeFrom(*source);
  }
}

void SsnLogoutMsg::MergeFrom(const SsnLogoutMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.SsnLogoutMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SsnLogoutMsg::UnsafeMergeFrom(const SsnLogoutMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
}

void SsnLogoutMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.SsnLogoutMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SsnLogoutMsg::CopyFrom(const SsnLogoutMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.SsnLogoutMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SsnLogoutMsg::IsInitialized() const {

  return true;
}

void SsnLogoutMsg::Swap(SsnLogoutMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SsnLogoutMsg::InternalSwap(SsnLogoutMsg* other) {
  reason_.Swap(&other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SsnLogoutMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SsnLogoutMsg_descriptor_;
  metadata.reflection = SsnLogoutMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SsnLogoutMsg

// optional string reason = 3;
void SsnLogoutMsg::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SsnLogoutMsg::reason() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnLogoutMsg.reason)
  return reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SsnLogoutMsg::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.SsnLogoutMsg.reason)
}
void SsnLogoutMsg::set_reason(const char* value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.SsnLogoutMsg.reason)
}
void SsnLogoutMsg::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.SsnLogoutMsg.reason)
}
::std::string* SsnLogoutMsg::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.SsnLogoutMsg.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SsnLogoutMsg::release_reason() {
  // @@protoc_insertion_point(field_release:oli.msg.SsnLogoutMsg.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SsnLogoutMsg::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.SsnLogoutMsg.reason)
}

inline const SsnLogoutMsg* SsnLogoutMsg::internal_default_instance() {
  return &SsnLogoutMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SsnRejectMsg::kRejectedMsgSeqNumIdFieldNumber;
const int SsnRejectMsg::kRejectReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SsnRejectMsg::SsnRejectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.SsnRejectMsg)
}

void SsnRejectMsg::InitAsDefaultInstance() {
}

SsnRejectMsg::SsnRejectMsg(const SsnRejectMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.SsnRejectMsg)
}

void SsnRejectMsg::SharedCtor() {
  rejectreason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rejectedmsgseqnumid_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

SsnRejectMsg::~SsnRejectMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.SsnRejectMsg)
  SharedDtor();
}

void SsnRejectMsg::SharedDtor() {
  rejectreason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SsnRejectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SsnRejectMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SsnRejectMsg_descriptor_;
}

const SsnRejectMsg& SsnRejectMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SsnRejectMsg> SsnRejectMsg_default_instance_;

SsnRejectMsg* SsnRejectMsg::New(::google::protobuf::Arena* arena) const {
  SsnRejectMsg* n = new SsnRejectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SsnRejectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.SsnRejectMsg)
  rejectedmsgseqnumid_ = GOOGLE_LONGLONG(0);
  rejectreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SsnRejectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.SsnRejectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 rejectedMsgSeqNumId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rejectedmsgseqnumid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_rejectReason;
        break;
      }

      // optional string rejectReason = 4;
      case 4: {
        if (tag == 34) {
         parse_rejectReason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rejectreason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rejectreason().data(), this->rejectreason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.SsnRejectMsg.rejectReason"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.SsnRejectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.SsnRejectMsg)
  return false;
#undef DO_
}

void SsnRejectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.SsnRejectMsg)
  // optional int64 rejectedMsgSeqNumId = 3;
  if (this->rejectedmsgseqnumid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->rejectedmsgseqnumid(), output);
  }

  // optional string rejectReason = 4;
  if (this->rejectreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rejectreason().data(), this->rejectreason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.SsnRejectMsg.rejectReason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->rejectreason(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.SsnRejectMsg)
}

::google::protobuf::uint8* SsnRejectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.SsnRejectMsg)
  // optional int64 rejectedMsgSeqNumId = 3;
  if (this->rejectedmsgseqnumid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->rejectedmsgseqnumid(), target);
  }

  // optional string rejectReason = 4;
  if (this->rejectreason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rejectreason().data(), this->rejectreason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.SsnRejectMsg.rejectReason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->rejectreason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.SsnRejectMsg)
  return target;
}

size_t SsnRejectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.SsnRejectMsg)
  size_t total_size = 0;

  // optional int64 rejectedMsgSeqNumId = 3;
  if (this->rejectedmsgseqnumid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->rejectedmsgseqnumid());
  }

  // optional string rejectReason = 4;
  if (this->rejectreason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rejectreason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SsnRejectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.SsnRejectMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SsnRejectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SsnRejectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.SsnRejectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.SsnRejectMsg)
    UnsafeMergeFrom(*source);
  }
}

void SsnRejectMsg::MergeFrom(const SsnRejectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.SsnRejectMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SsnRejectMsg::UnsafeMergeFrom(const SsnRejectMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.rejectedmsgseqnumid() != 0) {
    set_rejectedmsgseqnumid(from.rejectedmsgseqnumid());
  }
  if (from.rejectreason().size() > 0) {

    rejectreason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rejectreason_);
  }
}

void SsnRejectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.SsnRejectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SsnRejectMsg::CopyFrom(const SsnRejectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.SsnRejectMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SsnRejectMsg::IsInitialized() const {

  return true;
}

void SsnRejectMsg::Swap(SsnRejectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SsnRejectMsg::InternalSwap(SsnRejectMsg* other) {
  std::swap(rejectedmsgseqnumid_, other->rejectedmsgseqnumid_);
  rejectreason_.Swap(&other->rejectreason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SsnRejectMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SsnRejectMsg_descriptor_;
  metadata.reflection = SsnRejectMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SsnRejectMsg

// optional int64 rejectedMsgSeqNumId = 3;
void SsnRejectMsg::clear_rejectedmsgseqnumid() {
  rejectedmsgseqnumid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SsnRejectMsg::rejectedmsgseqnumid() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnRejectMsg.rejectedMsgSeqNumId)
  return rejectedmsgseqnumid_;
}
void SsnRejectMsg::set_rejectedmsgseqnumid(::google::protobuf::int64 value) {
  
  rejectedmsgseqnumid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.SsnRejectMsg.rejectedMsgSeqNumId)
}

// optional string rejectReason = 4;
void SsnRejectMsg::clear_rejectreason() {
  rejectreason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SsnRejectMsg::rejectreason() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnRejectMsg.rejectReason)
  return rejectreason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SsnRejectMsg::set_rejectreason(const ::std::string& value) {
  
  rejectreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.SsnRejectMsg.rejectReason)
}
void SsnRejectMsg::set_rejectreason(const char* value) {
  
  rejectreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.SsnRejectMsg.rejectReason)
}
void SsnRejectMsg::set_rejectreason(const char* value, size_t size) {
  
  rejectreason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.SsnRejectMsg.rejectReason)
}
::std::string* SsnRejectMsg::mutable_rejectreason() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.SsnRejectMsg.rejectReason)
  return rejectreason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SsnRejectMsg::release_rejectreason() {
  // @@protoc_insertion_point(field_release:oli.msg.SsnRejectMsg.rejectReason)
  
  return rejectreason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SsnRejectMsg::set_allocated_rejectreason(::std::string* rejectreason) {
  if (rejectreason != NULL) {
    
  } else {
    
  }
  rejectreason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rejectreason);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.SsnRejectMsg.rejectReason)
}

inline const SsnRejectMsg* SsnRejectMsg::internal_default_instance() {
  return &SsnRejectMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SsnRetransmittedMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SsnRetransmittedMsg::SsnRetransmittedMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.SsnRetransmittedMsg)
}

void SsnRetransmittedMsg::InitAsDefaultInstance() {
}

SsnRetransmittedMsg::SsnRetransmittedMsg(const SsnRetransmittedMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.SsnRetransmittedMsg)
}

void SsnRetransmittedMsg::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SsnRetransmittedMsg::~SsnRetransmittedMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.SsnRetransmittedMsg)
  SharedDtor();
}

void SsnRetransmittedMsg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SsnRetransmittedMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SsnRetransmittedMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SsnRetransmittedMsg_descriptor_;
}

const SsnRetransmittedMsg& SsnRetransmittedMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SsnRetransmittedMsg> SsnRetransmittedMsg_default_instance_;

SsnRetransmittedMsg* SsnRetransmittedMsg::New(::google::protobuf::Arena* arena) const {
  SsnRetransmittedMsg* n = new SsnRetransmittedMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SsnRetransmittedMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.SsnRetransmittedMsg)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SsnRetransmittedMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.SsnRetransmittedMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string msg = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.SsnRetransmittedMsg.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.SsnRetransmittedMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.SsnRetransmittedMsg)
  return false;
#undef DO_
}

void SsnRetransmittedMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.SsnRetransmittedMsg)
  // optional string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.SsnRetransmittedMsg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.SsnRetransmittedMsg)
}

::google::protobuf::uint8* SsnRetransmittedMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.SsnRetransmittedMsg)
  // optional string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.SsnRetransmittedMsg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.SsnRetransmittedMsg)
  return target;
}

size_t SsnRetransmittedMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.SsnRetransmittedMsg)
  size_t total_size = 0;

  // optional string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SsnRetransmittedMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.SsnRetransmittedMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SsnRetransmittedMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SsnRetransmittedMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.SsnRetransmittedMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.SsnRetransmittedMsg)
    UnsafeMergeFrom(*source);
  }
}

void SsnRetransmittedMsg::MergeFrom(const SsnRetransmittedMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.SsnRetransmittedMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SsnRetransmittedMsg::UnsafeMergeFrom(const SsnRetransmittedMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void SsnRetransmittedMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.SsnRetransmittedMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SsnRetransmittedMsg::CopyFrom(const SsnRetransmittedMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.SsnRetransmittedMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SsnRetransmittedMsg::IsInitialized() const {

  return true;
}

void SsnRetransmittedMsg::Swap(SsnRetransmittedMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SsnRetransmittedMsg::InternalSwap(SsnRetransmittedMsg* other) {
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SsnRetransmittedMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SsnRetransmittedMsg_descriptor_;
  metadata.reflection = SsnRetransmittedMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SsnRetransmittedMsg

// optional string msg = 3;
void SsnRetransmittedMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SsnRetransmittedMsg::msg() const {
  // @@protoc_insertion_point(field_get:oli.msg.SsnRetransmittedMsg.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SsnRetransmittedMsg::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.SsnRetransmittedMsg.msg)
}
void SsnRetransmittedMsg::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.SsnRetransmittedMsg.msg)
}
void SsnRetransmittedMsg::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.SsnRetransmittedMsg.msg)
}
::std::string* SsnRetransmittedMsg::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.SsnRetransmittedMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SsnRetransmittedMsg::release_msg() {
  // @@protoc_insertion_point(field_release:oli.msg.SsnRetransmittedMsg.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SsnRetransmittedMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.SsnRetransmittedMsg.msg)
}

inline const SsnRetransmittedMsg* SsnRetransmittedMsg::internal_default_instance() {
  return &SsnRetransmittedMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InstrumentDetails::kIdFieldNumber;
const int InstrumentDetails::kNameFieldNumber;
const int InstrumentDetails::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InstrumentDetails::InstrumentDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.InstrumentDetails)
}

void InstrumentDetails::InitAsDefaultInstance() {
}

InstrumentDetails::InstrumentDetails(const InstrumentDetails& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.InstrumentDetails)
}

void InstrumentDetails::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_) + sizeof(type_));
  _cached_size_ = 0;
}

InstrumentDetails::~InstrumentDetails() {
  // @@protoc_insertion_point(destructor:oli.msg.InstrumentDetails)
  SharedDtor();
}

void InstrumentDetails::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InstrumentDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InstrumentDetails::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InstrumentDetails_descriptor_;
}

const InstrumentDetails& InstrumentDetails::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InstrumentDetails> InstrumentDetails_default_instance_;

InstrumentDetails* InstrumentDetails::New(::google::protobuf::Arena* arena) const {
  InstrumentDetails* n = new InstrumentDetails;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InstrumentDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.InstrumentDetails)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InstrumentDetails, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InstrumentDetails*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, type_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool InstrumentDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.InstrumentDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 2;
      case 2: {
        if (tag == 16) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.InstrumentDetails.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional .oli.msg.InstrumentType type = 4;
      case 4: {
        if (tag == 32) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::oli::msg::InstrumentType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.InstrumentDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.InstrumentDetails)
  return false;
#undef DO_
}

void InstrumentDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.InstrumentDetails)
  // optional uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.InstrumentDetails.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional .oli.msg.InstrumentType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.InstrumentDetails)
}

::google::protobuf::uint8* InstrumentDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.InstrumentDetails)
  // optional uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.InstrumentDetails.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional .oli.msg.InstrumentType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.InstrumentDetails)
  return target;
}

size_t InstrumentDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.InstrumentDetails)
  size_t total_size = 0;

  // optional uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // optional string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .oli.msg.InstrumentType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InstrumentDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.InstrumentDetails)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InstrumentDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InstrumentDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.InstrumentDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.InstrumentDetails)
    UnsafeMergeFrom(*source);
  }
}

void InstrumentDetails::MergeFrom(const InstrumentDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.InstrumentDetails)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InstrumentDetails::UnsafeMergeFrom(const InstrumentDetails& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void InstrumentDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.InstrumentDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InstrumentDetails::CopyFrom(const InstrumentDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.InstrumentDetails)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InstrumentDetails::IsInitialized() const {

  return true;
}

void InstrumentDetails::Swap(InstrumentDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InstrumentDetails::InternalSwap(InstrumentDetails* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InstrumentDetails::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InstrumentDetails_descriptor_;
  metadata.reflection = InstrumentDetails_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InstrumentDetails

// optional uint64 id = 2;
void InstrumentDetails::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 InstrumentDetails::id() const {
  // @@protoc_insertion_point(field_get:oli.msg.InstrumentDetails.id)
  return id_;
}
void InstrumentDetails::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.InstrumentDetails.id)
}

// optional string name = 3;
void InstrumentDetails::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InstrumentDetails::name() const {
  // @@protoc_insertion_point(field_get:oli.msg.InstrumentDetails.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InstrumentDetails::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.InstrumentDetails.name)
}
void InstrumentDetails::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.InstrumentDetails.name)
}
void InstrumentDetails::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.InstrumentDetails.name)
}
::std::string* InstrumentDetails::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.InstrumentDetails.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InstrumentDetails::release_name() {
  // @@protoc_insertion_point(field_release:oli.msg.InstrumentDetails.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InstrumentDetails::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.InstrumentDetails.name)
}

// optional .oli.msg.InstrumentType type = 4;
void InstrumentDetails::clear_type() {
  type_ = 0;
}
::oli::msg::InstrumentType InstrumentDetails::type() const {
  // @@protoc_insertion_point(field_get:oli.msg.InstrumentDetails.type)
  return static_cast< ::oli::msg::InstrumentType >(type_);
}
void InstrumentDetails::set_type(::oli::msg::InstrumentType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.InstrumentDetails.type)
}

inline const InstrumentDetails* InstrumentDetails::internal_default_instance() {
  return &InstrumentDetails_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClntNewOrderRequestMsg::kClientRequestIdFieldNumber;
const int ClntNewOrderRequestMsg::kSideFieldNumber;
const int ClntNewOrderRequestMsg::kTypeFieldNumber;
const int ClntNewOrderRequestMsg::kQtyDigitsFieldNumber;
const int ClntNewOrderRequestMsg::kOrderQtyFieldNumber;
const int ClntNewOrderRequestMsg::kPriceDigitsFieldNumber;
const int ClntNewOrderRequestMsg::kOrderPriceFieldNumber;
const int ClntNewOrderRequestMsg::kInstrumentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClntNewOrderRequestMsg::ClntNewOrderRequestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.ClntNewOrderRequestMsg)
}

void ClntNewOrderRequestMsg::InitAsDefaultInstance() {
}

ClntNewOrderRequestMsg::ClntNewOrderRequestMsg(const ClntNewOrderRequestMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.ClntNewOrderRequestMsg)
}

void ClntNewOrderRequestMsg::SharedCtor() {
  clientrequestid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&side_, 0, reinterpret_cast<char*>(&instrumentid_) -
    reinterpret_cast<char*>(&side_) + sizeof(instrumentid_));
  _cached_size_ = 0;
}

ClntNewOrderRequestMsg::~ClntNewOrderRequestMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.ClntNewOrderRequestMsg)
  SharedDtor();
}

void ClntNewOrderRequestMsg::SharedDtor() {
  clientrequestid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClntNewOrderRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClntNewOrderRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClntNewOrderRequestMsg_descriptor_;
}

const ClntNewOrderRequestMsg& ClntNewOrderRequestMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClntNewOrderRequestMsg> ClntNewOrderRequestMsg_default_instance_;

ClntNewOrderRequestMsg* ClntNewOrderRequestMsg::New(::google::protobuf::Arena* arena) const {
  ClntNewOrderRequestMsg* n = new ClntNewOrderRequestMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClntNewOrderRequestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.ClntNewOrderRequestMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ClntNewOrderRequestMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ClntNewOrderRequestMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(side_, instrumentid_);
  clientrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ClntNewOrderRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.ClntNewOrderRequestMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string clientRequestId = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientrequestid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientrequestid().data(), this->clientrequestid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.ClntNewOrderRequestMsg.clientRequestId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_side;
        break;
      }

      // optional .oli.msg.OrderSide side = 4;
      case 4: {
        if (tag == 32) {
         parse_side:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::oli::msg::OrderSide >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .oli.msg.OrderType type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::oli::msg::OrderType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_qtyDigits;
        break;
      }

      // optional uint32 qtyDigits = 6;
      case 6: {
        if (tag == 48) {
         parse_qtyDigits:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qtydigits_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_orderQty;
        break;
      }

      // optional uint32 orderQty = 7;
      case 7: {
        if (tag == 56) {
         parse_orderQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orderqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_priceDigits;
        break;
      }

      // optional uint32 priceDigits = 8;
      case 8: {
        if (tag == 64) {
         parse_priceDigits:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pricedigits_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_orderPrice;
        break;
      }

      // optional uint32 orderPrice = 9;
      case 9: {
        if (tag == 72) {
         parse_orderPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &orderprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_instrumentId;
        break;
      }

      // optional uint64 instrumentId = 11;
      case 11: {
        if (tag == 88) {
         parse_instrumentId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instrumentid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.ClntNewOrderRequestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.ClntNewOrderRequestMsg)
  return false;
#undef DO_
}

void ClntNewOrderRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.ClntNewOrderRequestMsg)
  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientrequestid().data(), this->clientrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntNewOrderRequestMsg.clientRequestId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientrequestid(), output);
  }

  // optional .oli.msg.OrderSide side = 4;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->side(), output);
  }

  // optional .oli.msg.OrderType type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // optional uint32 qtyDigits = 6;
  if (this->qtydigits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->qtydigits(), output);
  }

  // optional uint32 orderQty = 7;
  if (this->orderqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->orderqty(), output);
  }

  // optional uint32 priceDigits = 8;
  if (this->pricedigits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pricedigits(), output);
  }

  // optional uint32 orderPrice = 9;
  if (this->orderprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->orderprice(), output);
  }

  // optional uint64 instrumentId = 11;
  if (this->instrumentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->instrumentid(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.ClntNewOrderRequestMsg)
}

::google::protobuf::uint8* ClntNewOrderRequestMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.ClntNewOrderRequestMsg)
  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientrequestid().data(), this->clientrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntNewOrderRequestMsg.clientRequestId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientrequestid(), target);
  }

  // optional .oli.msg.OrderSide side = 4;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->side(), target);
  }

  // optional .oli.msg.OrderType type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // optional uint32 qtyDigits = 6;
  if (this->qtydigits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->qtydigits(), target);
  }

  // optional uint32 orderQty = 7;
  if (this->orderqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->orderqty(), target);
  }

  // optional uint32 priceDigits = 8;
  if (this->pricedigits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pricedigits(), target);
  }

  // optional uint32 orderPrice = 9;
  if (this->orderprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->orderprice(), target);
  }

  // optional uint64 instrumentId = 11;
  if (this->instrumentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->instrumentid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.ClntNewOrderRequestMsg)
  return target;
}

size_t ClntNewOrderRequestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.ClntNewOrderRequestMsg)
  size_t total_size = 0;

  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientrequestid());
  }

  // optional .oli.msg.OrderSide side = 4;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  // optional .oli.msg.OrderType type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional uint32 qtyDigits = 6;
  if (this->qtydigits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qtydigits());
  }

  // optional uint32 orderQty = 7;
  if (this->orderqty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->orderqty());
  }

  // optional uint32 priceDigits = 8;
  if (this->pricedigits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pricedigits());
  }

  // optional uint32 orderPrice = 9;
  if (this->orderprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->orderprice());
  }

  // optional uint64 instrumentId = 11;
  if (this->instrumentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instrumentid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClntNewOrderRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.ClntNewOrderRequestMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClntNewOrderRequestMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClntNewOrderRequestMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.ClntNewOrderRequestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.ClntNewOrderRequestMsg)
    UnsafeMergeFrom(*source);
  }
}

void ClntNewOrderRequestMsg::MergeFrom(const ClntNewOrderRequestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.ClntNewOrderRequestMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClntNewOrderRequestMsg::UnsafeMergeFrom(const ClntNewOrderRequestMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.clientrequestid().size() > 0) {

    clientrequestid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientrequestid_);
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.qtydigits() != 0) {
    set_qtydigits(from.qtydigits());
  }
  if (from.orderqty() != 0) {
    set_orderqty(from.orderqty());
  }
  if (from.pricedigits() != 0) {
    set_pricedigits(from.pricedigits());
  }
  if (from.orderprice() != 0) {
    set_orderprice(from.orderprice());
  }
  if (from.instrumentid() != 0) {
    set_instrumentid(from.instrumentid());
  }
}

void ClntNewOrderRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.ClntNewOrderRequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClntNewOrderRequestMsg::CopyFrom(const ClntNewOrderRequestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.ClntNewOrderRequestMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClntNewOrderRequestMsg::IsInitialized() const {

  return true;
}

void ClntNewOrderRequestMsg::Swap(ClntNewOrderRequestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClntNewOrderRequestMsg::InternalSwap(ClntNewOrderRequestMsg* other) {
  clientrequestid_.Swap(&other->clientrequestid_);
  std::swap(side_, other->side_);
  std::swap(type_, other->type_);
  std::swap(qtydigits_, other->qtydigits_);
  std::swap(orderqty_, other->orderqty_);
  std::swap(pricedigits_, other->pricedigits_);
  std::swap(orderprice_, other->orderprice_);
  std::swap(instrumentid_, other->instrumentid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClntNewOrderRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClntNewOrderRequestMsg_descriptor_;
  metadata.reflection = ClntNewOrderRequestMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClntNewOrderRequestMsg

// optional string clientRequestId = 3;
void ClntNewOrderRequestMsg::clear_clientrequestid() {
  clientrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClntNewOrderRequestMsg::clientrequestid() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.clientRequestId)
  return clientrequestid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntNewOrderRequestMsg::set_clientrequestid(const ::std::string& value) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.clientRequestId)
}
void ClntNewOrderRequestMsg::set_clientrequestid(const char* value) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.ClntNewOrderRequestMsg.clientRequestId)
}
void ClntNewOrderRequestMsg::set_clientrequestid(const char* value, size_t size) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.ClntNewOrderRequestMsg.clientRequestId)
}
::std::string* ClntNewOrderRequestMsg::mutable_clientrequestid() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.ClntNewOrderRequestMsg.clientRequestId)
  return clientrequestid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClntNewOrderRequestMsg::release_clientrequestid() {
  // @@protoc_insertion_point(field_release:oli.msg.ClntNewOrderRequestMsg.clientRequestId)
  
  return clientrequestid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntNewOrderRequestMsg::set_allocated_clientrequestid(::std::string* clientrequestid) {
  if (clientrequestid != NULL) {
    
  } else {
    
  }
  clientrequestid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientrequestid);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.ClntNewOrderRequestMsg.clientRequestId)
}

// optional .oli.msg.OrderSide side = 4;
void ClntNewOrderRequestMsg::clear_side() {
  side_ = 0;
}
::oli::msg::OrderSide ClntNewOrderRequestMsg::side() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.side)
  return static_cast< ::oli::msg::OrderSide >(side_);
}
void ClntNewOrderRequestMsg::set_side(::oli::msg::OrderSide value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.side)
}

// optional .oli.msg.OrderType type = 5;
void ClntNewOrderRequestMsg::clear_type() {
  type_ = 0;
}
::oli::msg::OrderType ClntNewOrderRequestMsg::type() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.type)
  return static_cast< ::oli::msg::OrderType >(type_);
}
void ClntNewOrderRequestMsg::set_type(::oli::msg::OrderType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.type)
}

// optional uint32 qtyDigits = 6;
void ClntNewOrderRequestMsg::clear_qtydigits() {
  qtydigits_ = 0u;
}
::google::protobuf::uint32 ClntNewOrderRequestMsg::qtydigits() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.qtyDigits)
  return qtydigits_;
}
void ClntNewOrderRequestMsg::set_qtydigits(::google::protobuf::uint32 value) {
  
  qtydigits_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.qtyDigits)
}

// optional uint32 orderQty = 7;
void ClntNewOrderRequestMsg::clear_orderqty() {
  orderqty_ = 0u;
}
::google::protobuf::uint32 ClntNewOrderRequestMsg::orderqty() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.orderQty)
  return orderqty_;
}
void ClntNewOrderRequestMsg::set_orderqty(::google::protobuf::uint32 value) {
  
  orderqty_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.orderQty)
}

// optional uint32 priceDigits = 8;
void ClntNewOrderRequestMsg::clear_pricedigits() {
  pricedigits_ = 0u;
}
::google::protobuf::uint32 ClntNewOrderRequestMsg::pricedigits() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.priceDigits)
  return pricedigits_;
}
void ClntNewOrderRequestMsg::set_pricedigits(::google::protobuf::uint32 value) {
  
  pricedigits_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.priceDigits)
}

// optional uint32 orderPrice = 9;
void ClntNewOrderRequestMsg::clear_orderprice() {
  orderprice_ = 0u;
}
::google::protobuf::uint32 ClntNewOrderRequestMsg::orderprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.orderPrice)
  return orderprice_;
}
void ClntNewOrderRequestMsg::set_orderprice(::google::protobuf::uint32 value) {
  
  orderprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.orderPrice)
}

// optional uint64 instrumentId = 11;
void ClntNewOrderRequestMsg::clear_instrumentid() {
  instrumentid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClntNewOrderRequestMsg::instrumentid() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntNewOrderRequestMsg.instrumentId)
  return instrumentid_;
}
void ClntNewOrderRequestMsg::set_instrumentid(::google::protobuf::uint64 value) {
  
  instrumentid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntNewOrderRequestMsg.instrumentId)
}

inline const ClntNewOrderRequestMsg* ClntNewOrderRequestMsg::internal_default_instance() {
  return &ClntNewOrderRequestMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClntCancelOrderRequestMsg::kClientRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClntCancelOrderRequestMsg::ClntCancelOrderRequestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.ClntCancelOrderRequestMsg)
}

void ClntCancelOrderRequestMsg::InitAsDefaultInstance() {
}

ClntCancelOrderRequestMsg::ClntCancelOrderRequestMsg(const ClntCancelOrderRequestMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.ClntCancelOrderRequestMsg)
}

void ClntCancelOrderRequestMsg::SharedCtor() {
  clientrequestid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClntCancelOrderRequestMsg::~ClntCancelOrderRequestMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.ClntCancelOrderRequestMsg)
  SharedDtor();
}

void ClntCancelOrderRequestMsg::SharedDtor() {
  clientrequestid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClntCancelOrderRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClntCancelOrderRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClntCancelOrderRequestMsg_descriptor_;
}

const ClntCancelOrderRequestMsg& ClntCancelOrderRequestMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClntCancelOrderRequestMsg> ClntCancelOrderRequestMsg_default_instance_;

ClntCancelOrderRequestMsg* ClntCancelOrderRequestMsg::New(::google::protobuf::Arena* arena) const {
  ClntCancelOrderRequestMsg* n = new ClntCancelOrderRequestMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClntCancelOrderRequestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.ClntCancelOrderRequestMsg)
  clientrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ClntCancelOrderRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.ClntCancelOrderRequestMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string clientRequestId = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientrequestid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientrequestid().data(), this->clientrequestid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.ClntCancelOrderRequestMsg.clientRequestId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.ClntCancelOrderRequestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.ClntCancelOrderRequestMsg)
  return false;
#undef DO_
}

void ClntCancelOrderRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.ClntCancelOrderRequestMsg)
  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientrequestid().data(), this->clientrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntCancelOrderRequestMsg.clientRequestId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientrequestid(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.ClntCancelOrderRequestMsg)
}

::google::protobuf::uint8* ClntCancelOrderRequestMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.ClntCancelOrderRequestMsg)
  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientrequestid().data(), this->clientrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntCancelOrderRequestMsg.clientRequestId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientrequestid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.ClntCancelOrderRequestMsg)
  return target;
}

size_t ClntCancelOrderRequestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.ClntCancelOrderRequestMsg)
  size_t total_size = 0;

  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientrequestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClntCancelOrderRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.ClntCancelOrderRequestMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClntCancelOrderRequestMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClntCancelOrderRequestMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.ClntCancelOrderRequestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.ClntCancelOrderRequestMsg)
    UnsafeMergeFrom(*source);
  }
}

void ClntCancelOrderRequestMsg::MergeFrom(const ClntCancelOrderRequestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.ClntCancelOrderRequestMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClntCancelOrderRequestMsg::UnsafeMergeFrom(const ClntCancelOrderRequestMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.clientrequestid().size() > 0) {

    clientrequestid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientrequestid_);
  }
}

void ClntCancelOrderRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.ClntCancelOrderRequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClntCancelOrderRequestMsg::CopyFrom(const ClntCancelOrderRequestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.ClntCancelOrderRequestMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClntCancelOrderRequestMsg::IsInitialized() const {

  return true;
}

void ClntCancelOrderRequestMsg::Swap(ClntCancelOrderRequestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClntCancelOrderRequestMsg::InternalSwap(ClntCancelOrderRequestMsg* other) {
  clientrequestid_.Swap(&other->clientrequestid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClntCancelOrderRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClntCancelOrderRequestMsg_descriptor_;
  metadata.reflection = ClntCancelOrderRequestMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClntCancelOrderRequestMsg

// optional string clientRequestId = 3;
void ClntCancelOrderRequestMsg::clear_clientrequestid() {
  clientrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClntCancelOrderRequestMsg::clientrequestid() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntCancelOrderRequestMsg.clientRequestId)
  return clientrequestid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntCancelOrderRequestMsg::set_clientrequestid(const ::std::string& value) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.ClntCancelOrderRequestMsg.clientRequestId)
}
void ClntCancelOrderRequestMsg::set_clientrequestid(const char* value) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.ClntCancelOrderRequestMsg.clientRequestId)
}
void ClntCancelOrderRequestMsg::set_clientrequestid(const char* value, size_t size) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.ClntCancelOrderRequestMsg.clientRequestId)
}
::std::string* ClntCancelOrderRequestMsg::mutable_clientrequestid() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.ClntCancelOrderRequestMsg.clientRequestId)
  return clientrequestid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClntCancelOrderRequestMsg::release_clientrequestid() {
  // @@protoc_insertion_point(field_release:oli.msg.ClntCancelOrderRequestMsg.clientRequestId)
  
  return clientrequestid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntCancelOrderRequestMsg::set_allocated_clientrequestid(::std::string* clientrequestid) {
  if (clientrequestid != NULL) {
    
  } else {
    
  }
  clientrequestid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientrequestid);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.ClntCancelOrderRequestMsg.clientRequestId)
}

inline const ClntCancelOrderRequestMsg* ClntCancelOrderRequestMsg::internal_default_instance() {
  return &ClntCancelOrderRequestMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClntReplaceOrderRequestMsg::kClientRequestIdFieldNumber;
const int ClntReplaceOrderRequestMsg::kClientOriginalRequestIdFieldNumber;
const int ClntReplaceOrderRequestMsg::kOriginalOrderIdFieldNumber;
const int ClntReplaceOrderRequestMsg::kQtyDigitsFieldNumber;
const int ClntReplaceOrderRequestMsg::kNewOrderQtyFieldNumber;
const int ClntReplaceOrderRequestMsg::kPriceDigitsFieldNumber;
const int ClntReplaceOrderRequestMsg::kNewOrderPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClntReplaceOrderRequestMsg::ClntReplaceOrderRequestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.ClntReplaceOrderRequestMsg)
}

void ClntReplaceOrderRequestMsg::InitAsDefaultInstance() {
}

ClntReplaceOrderRequestMsg::ClntReplaceOrderRequestMsg(const ClntReplaceOrderRequestMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.ClntReplaceOrderRequestMsg)
}

void ClntReplaceOrderRequestMsg::SharedCtor() {
  clientrequestid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientoriginalrequestid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&originalorderid_, 0, reinterpret_cast<char*>(&neworderprice_) -
    reinterpret_cast<char*>(&originalorderid_) + sizeof(neworderprice_));
  _cached_size_ = 0;
}

ClntReplaceOrderRequestMsg::~ClntReplaceOrderRequestMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.ClntReplaceOrderRequestMsg)
  SharedDtor();
}

void ClntReplaceOrderRequestMsg::SharedDtor() {
  clientrequestid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientoriginalrequestid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClntReplaceOrderRequestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClntReplaceOrderRequestMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClntReplaceOrderRequestMsg_descriptor_;
}

const ClntReplaceOrderRequestMsg& ClntReplaceOrderRequestMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClntReplaceOrderRequestMsg> ClntReplaceOrderRequestMsg_default_instance_;

ClntReplaceOrderRequestMsg* ClntReplaceOrderRequestMsg::New(::google::protobuf::Arena* arena) const {
  ClntReplaceOrderRequestMsg* n = new ClntReplaceOrderRequestMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClntReplaceOrderRequestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.ClntReplaceOrderRequestMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ClntReplaceOrderRequestMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ClntReplaceOrderRequestMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(originalorderid_, neworderprice_);
  clientrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientoriginalrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ClntReplaceOrderRequestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.ClntReplaceOrderRequestMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string clientRequestId = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientrequestid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientrequestid().data(), this->clientrequestid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.ClntReplaceOrderRequestMsg.clientRequestId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_clientOriginalRequestId;
        break;
      }

      // optional string clientOriginalRequestId = 4;
      case 4: {
        if (tag == 34) {
         parse_clientOriginalRequestId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientoriginalrequestid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientoriginalrequestid().data(), this->clientoriginalrequestid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_originalOrderId;
        break;
      }

      // optional uint64 originalOrderId = 5;
      case 5: {
        if (tag == 40) {
         parse_originalOrderId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &originalorderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_qtyDigits;
        break;
      }

      // optional uint32 qtyDigits = 6;
      case 6: {
        if (tag == 48) {
         parse_qtyDigits:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qtydigits_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_newOrderQty;
        break;
      }

      // optional uint32 newOrderQty = 7;
      case 7: {
        if (tag == 56) {
         parse_newOrderQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &neworderqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_priceDigits;
        break;
      }

      // optional uint32 priceDigits = 8;
      case 8: {
        if (tag == 64) {
         parse_priceDigits:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pricedigits_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_newOrderPrice;
        break;
      }

      // optional uint32 newOrderPrice = 9;
      case 9: {
        if (tag == 72) {
         parse_newOrderPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &neworderprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.ClntReplaceOrderRequestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.ClntReplaceOrderRequestMsg)
  return false;
#undef DO_
}

void ClntReplaceOrderRequestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.ClntReplaceOrderRequestMsg)
  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientrequestid().data(), this->clientrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntReplaceOrderRequestMsg.clientRequestId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientrequestid(), output);
  }

  // optional string clientOriginalRequestId = 4;
  if (this->clientoriginalrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientoriginalrequestid().data(), this->clientoriginalrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->clientoriginalrequestid(), output);
  }

  // optional uint64 originalOrderId = 5;
  if (this->originalorderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->originalorderid(), output);
  }

  // optional uint32 qtyDigits = 6;
  if (this->qtydigits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->qtydigits(), output);
  }

  // optional uint32 newOrderQty = 7;
  if (this->neworderqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->neworderqty(), output);
  }

  // optional uint32 priceDigits = 8;
  if (this->pricedigits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->pricedigits(), output);
  }

  // optional uint32 newOrderPrice = 9;
  if (this->neworderprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->neworderprice(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.ClntReplaceOrderRequestMsg)
}

::google::protobuf::uint8* ClntReplaceOrderRequestMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.ClntReplaceOrderRequestMsg)
  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientrequestid().data(), this->clientrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntReplaceOrderRequestMsg.clientRequestId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientrequestid(), target);
  }

  // optional string clientOriginalRequestId = 4;
  if (this->clientoriginalrequestid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientoriginalrequestid().data(), this->clientoriginalrequestid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->clientoriginalrequestid(), target);
  }

  // optional uint64 originalOrderId = 5;
  if (this->originalorderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->originalorderid(), target);
  }

  // optional uint32 qtyDigits = 6;
  if (this->qtydigits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->qtydigits(), target);
  }

  // optional uint32 newOrderQty = 7;
  if (this->neworderqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->neworderqty(), target);
  }

  // optional uint32 priceDigits = 8;
  if (this->pricedigits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->pricedigits(), target);
  }

  // optional uint32 newOrderPrice = 9;
  if (this->neworderprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->neworderprice(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.ClntReplaceOrderRequestMsg)
  return target;
}

size_t ClntReplaceOrderRequestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.ClntReplaceOrderRequestMsg)
  size_t total_size = 0;

  // optional string clientRequestId = 3;
  if (this->clientrequestid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientrequestid());
  }

  // optional string clientOriginalRequestId = 4;
  if (this->clientoriginalrequestid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientoriginalrequestid());
  }

  // optional uint64 originalOrderId = 5;
  if (this->originalorderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->originalorderid());
  }

  // optional uint32 qtyDigits = 6;
  if (this->qtydigits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qtydigits());
  }

  // optional uint32 newOrderQty = 7;
  if (this->neworderqty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->neworderqty());
  }

  // optional uint32 priceDigits = 8;
  if (this->pricedigits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pricedigits());
  }

  // optional uint32 newOrderPrice = 9;
  if (this->neworderprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->neworderprice());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClntReplaceOrderRequestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.ClntReplaceOrderRequestMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClntReplaceOrderRequestMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClntReplaceOrderRequestMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.ClntReplaceOrderRequestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.ClntReplaceOrderRequestMsg)
    UnsafeMergeFrom(*source);
  }
}

void ClntReplaceOrderRequestMsg::MergeFrom(const ClntReplaceOrderRequestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.ClntReplaceOrderRequestMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClntReplaceOrderRequestMsg::UnsafeMergeFrom(const ClntReplaceOrderRequestMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.clientrequestid().size() > 0) {

    clientrequestid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientrequestid_);
  }
  if (from.clientoriginalrequestid().size() > 0) {

    clientoriginalrequestid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientoriginalrequestid_);
  }
  if (from.originalorderid() != 0) {
    set_originalorderid(from.originalorderid());
  }
  if (from.qtydigits() != 0) {
    set_qtydigits(from.qtydigits());
  }
  if (from.neworderqty() != 0) {
    set_neworderqty(from.neworderqty());
  }
  if (from.pricedigits() != 0) {
    set_pricedigits(from.pricedigits());
  }
  if (from.neworderprice() != 0) {
    set_neworderprice(from.neworderprice());
  }
}

void ClntReplaceOrderRequestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.ClntReplaceOrderRequestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClntReplaceOrderRequestMsg::CopyFrom(const ClntReplaceOrderRequestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.ClntReplaceOrderRequestMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClntReplaceOrderRequestMsg::IsInitialized() const {

  return true;
}

void ClntReplaceOrderRequestMsg::Swap(ClntReplaceOrderRequestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClntReplaceOrderRequestMsg::InternalSwap(ClntReplaceOrderRequestMsg* other) {
  clientrequestid_.Swap(&other->clientrequestid_);
  clientoriginalrequestid_.Swap(&other->clientoriginalrequestid_);
  std::swap(originalorderid_, other->originalorderid_);
  std::swap(qtydigits_, other->qtydigits_);
  std::swap(neworderqty_, other->neworderqty_);
  std::swap(pricedigits_, other->pricedigits_);
  std::swap(neworderprice_, other->neworderprice_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClntReplaceOrderRequestMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClntReplaceOrderRequestMsg_descriptor_;
  metadata.reflection = ClntReplaceOrderRequestMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClntReplaceOrderRequestMsg

// optional string clientRequestId = 3;
void ClntReplaceOrderRequestMsg::clear_clientrequestid() {
  clientrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClntReplaceOrderRequestMsg::clientrequestid() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntReplaceOrderRequestMsg.clientRequestId)
  return clientrequestid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntReplaceOrderRequestMsg::set_clientrequestid(const ::std::string& value) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.ClntReplaceOrderRequestMsg.clientRequestId)
}
void ClntReplaceOrderRequestMsg::set_clientrequestid(const char* value) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.ClntReplaceOrderRequestMsg.clientRequestId)
}
void ClntReplaceOrderRequestMsg::set_clientrequestid(const char* value, size_t size) {
  
  clientrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.ClntReplaceOrderRequestMsg.clientRequestId)
}
::std::string* ClntReplaceOrderRequestMsg::mutable_clientrequestid() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.ClntReplaceOrderRequestMsg.clientRequestId)
  return clientrequestid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClntReplaceOrderRequestMsg::release_clientrequestid() {
  // @@protoc_insertion_point(field_release:oli.msg.ClntReplaceOrderRequestMsg.clientRequestId)
  
  return clientrequestid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntReplaceOrderRequestMsg::set_allocated_clientrequestid(::std::string* clientrequestid) {
  if (clientrequestid != NULL) {
    
  } else {
    
  }
  clientrequestid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientrequestid);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.ClntReplaceOrderRequestMsg.clientRequestId)
}

// optional string clientOriginalRequestId = 4;
void ClntReplaceOrderRequestMsg::clear_clientoriginalrequestid() {
  clientoriginalrequestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClntReplaceOrderRequestMsg::clientoriginalrequestid() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId)
  return clientoriginalrequestid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntReplaceOrderRequestMsg::set_clientoriginalrequestid(const ::std::string& value) {
  
  clientoriginalrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId)
}
void ClntReplaceOrderRequestMsg::set_clientoriginalrequestid(const char* value) {
  
  clientoriginalrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId)
}
void ClntReplaceOrderRequestMsg::set_clientoriginalrequestid(const char* value, size_t size) {
  
  clientoriginalrequestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId)
}
::std::string* ClntReplaceOrderRequestMsg::mutable_clientoriginalrequestid() {
  
  // @@protoc_insertion_point(field_mutable:oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId)
  return clientoriginalrequestid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClntReplaceOrderRequestMsg::release_clientoriginalrequestid() {
  // @@protoc_insertion_point(field_release:oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId)
  
  return clientoriginalrequestid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClntReplaceOrderRequestMsg::set_allocated_clientoriginalrequestid(::std::string* clientoriginalrequestid) {
  if (clientoriginalrequestid != NULL) {
    
  } else {
    
  }
  clientoriginalrequestid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientoriginalrequestid);
  // @@protoc_insertion_point(field_set_allocated:oli.msg.ClntReplaceOrderRequestMsg.clientOriginalRequestId)
}

// optional uint64 originalOrderId = 5;
void ClntReplaceOrderRequestMsg::clear_originalorderid() {
  originalorderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClntReplaceOrderRequestMsg::originalorderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntReplaceOrderRequestMsg.originalOrderId)
  return originalorderid_;
}
void ClntReplaceOrderRequestMsg::set_originalorderid(::google::protobuf::uint64 value) {
  
  originalorderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntReplaceOrderRequestMsg.originalOrderId)
}

// optional uint32 qtyDigits = 6;
void ClntReplaceOrderRequestMsg::clear_qtydigits() {
  qtydigits_ = 0u;
}
::google::protobuf::uint32 ClntReplaceOrderRequestMsg::qtydigits() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntReplaceOrderRequestMsg.qtyDigits)
  return qtydigits_;
}
void ClntReplaceOrderRequestMsg::set_qtydigits(::google::protobuf::uint32 value) {
  
  qtydigits_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntReplaceOrderRequestMsg.qtyDigits)
}

// optional uint32 newOrderQty = 7;
void ClntReplaceOrderRequestMsg::clear_neworderqty() {
  neworderqty_ = 0u;
}
::google::protobuf::uint32 ClntReplaceOrderRequestMsg::neworderqty() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntReplaceOrderRequestMsg.newOrderQty)
  return neworderqty_;
}
void ClntReplaceOrderRequestMsg::set_neworderqty(::google::protobuf::uint32 value) {
  
  neworderqty_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntReplaceOrderRequestMsg.newOrderQty)
}

// optional uint32 priceDigits = 8;
void ClntReplaceOrderRequestMsg::clear_pricedigits() {
  pricedigits_ = 0u;
}
::google::protobuf::uint32 ClntReplaceOrderRequestMsg::pricedigits() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntReplaceOrderRequestMsg.priceDigits)
  return pricedigits_;
}
void ClntReplaceOrderRequestMsg::set_pricedigits(::google::protobuf::uint32 value) {
  
  pricedigits_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntReplaceOrderRequestMsg.priceDigits)
}

// optional uint32 newOrderPrice = 9;
void ClntReplaceOrderRequestMsg::clear_neworderprice() {
  neworderprice_ = 0u;
}
::google::protobuf::uint32 ClntReplaceOrderRequestMsg::neworderprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.ClntReplaceOrderRequestMsg.newOrderPrice)
  return neworderprice_;
}
void ClntReplaceOrderRequestMsg::set_neworderprice(::google::protobuf::uint32 value) {
  
  neworderprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.ClntReplaceOrderRequestMsg.newOrderPrice)
}

inline const ClntReplaceOrderRequestMsg* ClntReplaceOrderRequestMsg::internal_default_instance() {
  return &ClntReplaceOrderRequestMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OMSNewOrderMsg::kOrderIdFieldNumber;
const int OMSNewOrderMsg::kInstrumentIdFieldNumber;
const int OMSNewOrderMsg::kPriceFieldNumber;
const int OMSNewOrderMsg::kVolumeLeftFieldNumber;
const int OMSNewOrderMsg::kSideFieldNumber;
const int OMSNewOrderMsg::kOrdTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OMSNewOrderMsg::OMSNewOrderMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OMSNewOrderMsg)
}

void OMSNewOrderMsg::InitAsDefaultInstance() {
}

OMSNewOrderMsg::OMSNewOrderMsg(const OMSNewOrderMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OMSNewOrderMsg)
}

void OMSNewOrderMsg::SharedCtor() {
  ::memset(&orderid_, 0, reinterpret_cast<char*>(&ordtype_) -
    reinterpret_cast<char*>(&orderid_) + sizeof(ordtype_));
  _cached_size_ = 0;
}

OMSNewOrderMsg::~OMSNewOrderMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OMSNewOrderMsg)
  SharedDtor();
}

void OMSNewOrderMsg::SharedDtor() {
}

void OMSNewOrderMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OMSNewOrderMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OMSNewOrderMsg_descriptor_;
}

const OMSNewOrderMsg& OMSNewOrderMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OMSNewOrderMsg> OMSNewOrderMsg_default_instance_;

OMSNewOrderMsg* OMSNewOrderMsg::New(::google::protobuf::Arena* arena) const {
  OMSNewOrderMsg* n = new OMSNewOrderMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OMSNewOrderMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OMSNewOrderMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OMSNewOrderMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OMSNewOrderMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, ordtype_);

#undef ZR_HELPER_
#undef ZR_

}

bool OMSNewOrderMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OMSNewOrderMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 orderId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_instrumentId;
        break;
      }

      // optional uint64 instrumentId = 4;
      case 4: {
        if (tag == 32) {
         parse_instrumentId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instrumentid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_price;
        break;
      }

      // optional uint32 price = 5;
      case 5: {
        if (tag == 40) {
         parse_price:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_volumeLeft;
        break;
      }

      // optional uint32 volumeLeft = 6;
      case 6: {
        if (tag == 48) {
         parse_volumeLeft:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &volumeleft_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_side;
        break;
      }

      // optional .oli.msg.OrderSide side = 7;
      case 7: {
        if (tag == 56) {
         parse_side:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::oli::msg::OrderSide >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ordType;
        break;
      }

      // optional .oli.msg.OrderType ordType = 8;
      case 8: {
        if (tag == 64) {
         parse_ordType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ordtype(static_cast< ::oli::msg::OrderType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OMSNewOrderMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OMSNewOrderMsg)
  return false;
#undef DO_
}

void OMSNewOrderMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OMSNewOrderMsg)
  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->orderid(), output);
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->instrumentid(), output);
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->price(), output);
  }

  // optional uint32 volumeLeft = 6;
  if (this->volumeleft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->volumeleft(), output);
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->side(), output);
  }

  // optional .oli.msg.OrderType ordType = 8;
  if (this->ordtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->ordtype(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OMSNewOrderMsg)
}

::google::protobuf::uint8* OMSNewOrderMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OMSNewOrderMsg)
  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->orderid(), target);
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->instrumentid(), target);
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->price(), target);
  }

  // optional uint32 volumeLeft = 6;
  if (this->volumeleft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->volumeleft(), target);
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->side(), target);
  }

  // optional .oli.msg.OrderType ordType = 8;
  if (this->ordtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->ordtype(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OMSNewOrderMsg)
  return target;
}

size_t OMSNewOrderMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OMSNewOrderMsg)
  size_t total_size = 0;

  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instrumentid());
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }

  // optional uint32 volumeLeft = 6;
  if (this->volumeleft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->volumeleft());
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  // optional .oli.msg.OrderType ordType = 8;
  if (this->ordtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ordtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OMSNewOrderMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OMSNewOrderMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OMSNewOrderMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OMSNewOrderMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OMSNewOrderMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OMSNewOrderMsg)
    UnsafeMergeFrom(*source);
  }
}

void OMSNewOrderMsg::MergeFrom(const OMSNewOrderMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OMSNewOrderMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OMSNewOrderMsg::UnsafeMergeFrom(const OMSNewOrderMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.instrumentid() != 0) {
    set_instrumentid(from.instrumentid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.volumeleft() != 0) {
    set_volumeleft(from.volumeleft());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.ordtype() != 0) {
    set_ordtype(from.ordtype());
  }
}

void OMSNewOrderMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OMSNewOrderMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OMSNewOrderMsg::CopyFrom(const OMSNewOrderMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OMSNewOrderMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OMSNewOrderMsg::IsInitialized() const {

  return true;
}

void OMSNewOrderMsg::Swap(OMSNewOrderMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OMSNewOrderMsg::InternalSwap(OMSNewOrderMsg* other) {
  std::swap(orderid_, other->orderid_);
  std::swap(instrumentid_, other->instrumentid_);
  std::swap(price_, other->price_);
  std::swap(volumeleft_, other->volumeleft_);
  std::swap(side_, other->side_);
  std::swap(ordtype_, other->ordtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OMSNewOrderMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OMSNewOrderMsg_descriptor_;
  metadata.reflection = OMSNewOrderMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OMSNewOrderMsg

// optional uint64 orderId = 3;
void OMSNewOrderMsg::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSNewOrderMsg::orderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSNewOrderMsg.orderId)
  return orderid_;
}
void OMSNewOrderMsg::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSNewOrderMsg.orderId)
}

// optional uint64 instrumentId = 4;
void OMSNewOrderMsg::clear_instrumentid() {
  instrumentid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSNewOrderMsg::instrumentid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSNewOrderMsg.instrumentId)
  return instrumentid_;
}
void OMSNewOrderMsg::set_instrumentid(::google::protobuf::uint64 value) {
  
  instrumentid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSNewOrderMsg.instrumentId)
}

// optional uint32 price = 5;
void OMSNewOrderMsg::clear_price() {
  price_ = 0u;
}
::google::protobuf::uint32 OMSNewOrderMsg::price() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSNewOrderMsg.price)
  return price_;
}
void OMSNewOrderMsg::set_price(::google::protobuf::uint32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSNewOrderMsg.price)
}

// optional uint32 volumeLeft = 6;
void OMSNewOrderMsg::clear_volumeleft() {
  volumeleft_ = 0u;
}
::google::protobuf::uint32 OMSNewOrderMsg::volumeleft() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSNewOrderMsg.volumeLeft)
  return volumeleft_;
}
void OMSNewOrderMsg::set_volumeleft(::google::protobuf::uint32 value) {
  
  volumeleft_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSNewOrderMsg.volumeLeft)
}

// optional .oli.msg.OrderSide side = 7;
void OMSNewOrderMsg::clear_side() {
  side_ = 0;
}
::oli::msg::OrderSide OMSNewOrderMsg::side() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSNewOrderMsg.side)
  return static_cast< ::oli::msg::OrderSide >(side_);
}
void OMSNewOrderMsg::set_side(::oli::msg::OrderSide value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSNewOrderMsg.side)
}

// optional .oli.msg.OrderType ordType = 8;
void OMSNewOrderMsg::clear_ordtype() {
  ordtype_ = 0;
}
::oli::msg::OrderType OMSNewOrderMsg::ordtype() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSNewOrderMsg.ordType)
  return static_cast< ::oli::msg::OrderType >(ordtype_);
}
void OMSNewOrderMsg::set_ordtype(::oli::msg::OrderType value) {
  
  ordtype_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSNewOrderMsg.ordType)
}

inline const OMSNewOrderMsg* OMSNewOrderMsg::internal_default_instance() {
  return &OMSNewOrderMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OMSChangeOrderMsg::kOldOrderIdFieldNumber;
const int OMSChangeOrderMsg::kNewOrderIdFieldNumber;
const int OMSChangeOrderMsg::kInstrumentIdFieldNumber;
const int OMSChangeOrderMsg::kOldPriceFieldNumber;
const int OMSChangeOrderMsg::kNewPriceFieldNumber;
const int OMSChangeOrderMsg::kOldVolumeLeftFieldNumber;
const int OMSChangeOrderMsg::kNewVolumeLeftFieldNumber;
const int OMSChangeOrderMsg::kSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OMSChangeOrderMsg::OMSChangeOrderMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OMSChangeOrderMsg)
}

void OMSChangeOrderMsg::InitAsDefaultInstance() {
}

OMSChangeOrderMsg::OMSChangeOrderMsg(const OMSChangeOrderMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OMSChangeOrderMsg)
}

void OMSChangeOrderMsg::SharedCtor() {
  ::memset(&oldorderid_, 0, reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&oldorderid_) + sizeof(side_));
  _cached_size_ = 0;
}

OMSChangeOrderMsg::~OMSChangeOrderMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OMSChangeOrderMsg)
  SharedDtor();
}

void OMSChangeOrderMsg::SharedDtor() {
}

void OMSChangeOrderMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OMSChangeOrderMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OMSChangeOrderMsg_descriptor_;
}

const OMSChangeOrderMsg& OMSChangeOrderMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OMSChangeOrderMsg> OMSChangeOrderMsg_default_instance_;

OMSChangeOrderMsg* OMSChangeOrderMsg::New(::google::protobuf::Arena* arena) const {
  OMSChangeOrderMsg* n = new OMSChangeOrderMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OMSChangeOrderMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OMSChangeOrderMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OMSChangeOrderMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OMSChangeOrderMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(oldorderid_, side_);

#undef ZR_HELPER_
#undef ZR_

}

bool OMSChangeOrderMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OMSChangeOrderMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 oldOrderId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &oldorderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_newOrderId;
        break;
      }

      // optional uint64 newOrderId = 4;
      case 4: {
        if (tag == 32) {
         parse_newOrderId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &neworderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_instrumentId;
        break;
      }

      // optional uint64 instrumentId = 5;
      case 5: {
        if (tag == 40) {
         parse_instrumentId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instrumentid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_oldPrice;
        break;
      }

      // optional uint32 oldPrice = 6;
      case 6: {
        if (tag == 48) {
         parse_oldPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_newPrice;
        break;
      }

      // optional uint32 newPrice = 7;
      case 7: {
        if (tag == 56) {
         parse_newPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_oldVolumeLeft;
        break;
      }

      // optional uint32 oldVolumeLeft = 8;
      case 8: {
        if (tag == 64) {
         parse_oldVolumeLeft:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oldvolumeleft_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_newVolumeLeft;
        break;
      }

      // optional uint32 newVolumeLeft = 9;
      case 9: {
        if (tag == 72) {
         parse_newVolumeLeft:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newvolumeleft_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_side;
        break;
      }

      // optional .oli.msg.OrderSide side = 10;
      case 10: {
        if (tag == 80) {
         parse_side:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::oli::msg::OrderSide >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OMSChangeOrderMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OMSChangeOrderMsg)
  return false;
#undef DO_
}

void OMSChangeOrderMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OMSChangeOrderMsg)
  // optional uint64 oldOrderId = 3;
  if (this->oldorderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->oldorderid(), output);
  }

  // optional uint64 newOrderId = 4;
  if (this->neworderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->neworderid(), output);
  }

  // optional uint64 instrumentId = 5;
  if (this->instrumentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->instrumentid(), output);
  }

  // optional uint32 oldPrice = 6;
  if (this->oldprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->oldprice(), output);
  }

  // optional uint32 newPrice = 7;
  if (this->newprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->newprice(), output);
  }

  // optional uint32 oldVolumeLeft = 8;
  if (this->oldvolumeleft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->oldvolumeleft(), output);
  }

  // optional uint32 newVolumeLeft = 9;
  if (this->newvolumeleft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->newvolumeleft(), output);
  }

  // optional .oli.msg.OrderSide side = 10;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->side(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OMSChangeOrderMsg)
}

::google::protobuf::uint8* OMSChangeOrderMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OMSChangeOrderMsg)
  // optional uint64 oldOrderId = 3;
  if (this->oldorderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->oldorderid(), target);
  }

  // optional uint64 newOrderId = 4;
  if (this->neworderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->neworderid(), target);
  }

  // optional uint64 instrumentId = 5;
  if (this->instrumentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->instrumentid(), target);
  }

  // optional uint32 oldPrice = 6;
  if (this->oldprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->oldprice(), target);
  }

  // optional uint32 newPrice = 7;
  if (this->newprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->newprice(), target);
  }

  // optional uint32 oldVolumeLeft = 8;
  if (this->oldvolumeleft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->oldvolumeleft(), target);
  }

  // optional uint32 newVolumeLeft = 9;
  if (this->newvolumeleft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->newvolumeleft(), target);
  }

  // optional .oli.msg.OrderSide side = 10;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->side(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OMSChangeOrderMsg)
  return target;
}

size_t OMSChangeOrderMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OMSChangeOrderMsg)
  size_t total_size = 0;

  // optional uint64 oldOrderId = 3;
  if (this->oldorderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->oldorderid());
  }

  // optional uint64 newOrderId = 4;
  if (this->neworderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->neworderid());
  }

  // optional uint64 instrumentId = 5;
  if (this->instrumentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instrumentid());
  }

  // optional uint32 oldPrice = 6;
  if (this->oldprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldprice());
  }

  // optional uint32 newPrice = 7;
  if (this->newprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->newprice());
  }

  // optional uint32 oldVolumeLeft = 8;
  if (this->oldvolumeleft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->oldvolumeleft());
  }

  // optional uint32 newVolumeLeft = 9;
  if (this->newvolumeleft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->newvolumeleft());
  }

  // optional .oli.msg.OrderSide side = 10;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OMSChangeOrderMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OMSChangeOrderMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OMSChangeOrderMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OMSChangeOrderMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OMSChangeOrderMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OMSChangeOrderMsg)
    UnsafeMergeFrom(*source);
  }
}

void OMSChangeOrderMsg::MergeFrom(const OMSChangeOrderMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OMSChangeOrderMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OMSChangeOrderMsg::UnsafeMergeFrom(const OMSChangeOrderMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.oldorderid() != 0) {
    set_oldorderid(from.oldorderid());
  }
  if (from.neworderid() != 0) {
    set_neworderid(from.neworderid());
  }
  if (from.instrumentid() != 0) {
    set_instrumentid(from.instrumentid());
  }
  if (from.oldprice() != 0) {
    set_oldprice(from.oldprice());
  }
  if (from.newprice() != 0) {
    set_newprice(from.newprice());
  }
  if (from.oldvolumeleft() != 0) {
    set_oldvolumeleft(from.oldvolumeleft());
  }
  if (from.newvolumeleft() != 0) {
    set_newvolumeleft(from.newvolumeleft());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
}

void OMSChangeOrderMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OMSChangeOrderMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OMSChangeOrderMsg::CopyFrom(const OMSChangeOrderMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OMSChangeOrderMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OMSChangeOrderMsg::IsInitialized() const {

  return true;
}

void OMSChangeOrderMsg::Swap(OMSChangeOrderMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OMSChangeOrderMsg::InternalSwap(OMSChangeOrderMsg* other) {
  std::swap(oldorderid_, other->oldorderid_);
  std::swap(neworderid_, other->neworderid_);
  std::swap(instrumentid_, other->instrumentid_);
  std::swap(oldprice_, other->oldprice_);
  std::swap(newprice_, other->newprice_);
  std::swap(oldvolumeleft_, other->oldvolumeleft_);
  std::swap(newvolumeleft_, other->newvolumeleft_);
  std::swap(side_, other->side_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OMSChangeOrderMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OMSChangeOrderMsg_descriptor_;
  metadata.reflection = OMSChangeOrderMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OMSChangeOrderMsg

// optional uint64 oldOrderId = 3;
void OMSChangeOrderMsg::clear_oldorderid() {
  oldorderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSChangeOrderMsg::oldorderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.oldOrderId)
  return oldorderid_;
}
void OMSChangeOrderMsg::set_oldorderid(::google::protobuf::uint64 value) {
  
  oldorderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.oldOrderId)
}

// optional uint64 newOrderId = 4;
void OMSChangeOrderMsg::clear_neworderid() {
  neworderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSChangeOrderMsg::neworderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.newOrderId)
  return neworderid_;
}
void OMSChangeOrderMsg::set_neworderid(::google::protobuf::uint64 value) {
  
  neworderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.newOrderId)
}

// optional uint64 instrumentId = 5;
void OMSChangeOrderMsg::clear_instrumentid() {
  instrumentid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSChangeOrderMsg::instrumentid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.instrumentId)
  return instrumentid_;
}
void OMSChangeOrderMsg::set_instrumentid(::google::protobuf::uint64 value) {
  
  instrumentid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.instrumentId)
}

// optional uint32 oldPrice = 6;
void OMSChangeOrderMsg::clear_oldprice() {
  oldprice_ = 0u;
}
::google::protobuf::uint32 OMSChangeOrderMsg::oldprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.oldPrice)
  return oldprice_;
}
void OMSChangeOrderMsg::set_oldprice(::google::protobuf::uint32 value) {
  
  oldprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.oldPrice)
}

// optional uint32 newPrice = 7;
void OMSChangeOrderMsg::clear_newprice() {
  newprice_ = 0u;
}
::google::protobuf::uint32 OMSChangeOrderMsg::newprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.newPrice)
  return newprice_;
}
void OMSChangeOrderMsg::set_newprice(::google::protobuf::uint32 value) {
  
  newprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.newPrice)
}

// optional uint32 oldVolumeLeft = 8;
void OMSChangeOrderMsg::clear_oldvolumeleft() {
  oldvolumeleft_ = 0u;
}
::google::protobuf::uint32 OMSChangeOrderMsg::oldvolumeleft() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.oldVolumeLeft)
  return oldvolumeleft_;
}
void OMSChangeOrderMsg::set_oldvolumeleft(::google::protobuf::uint32 value) {
  
  oldvolumeleft_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.oldVolumeLeft)
}

// optional uint32 newVolumeLeft = 9;
void OMSChangeOrderMsg::clear_newvolumeleft() {
  newvolumeleft_ = 0u;
}
::google::protobuf::uint32 OMSChangeOrderMsg::newvolumeleft() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.newVolumeLeft)
  return newvolumeleft_;
}
void OMSChangeOrderMsg::set_newvolumeleft(::google::protobuf::uint32 value) {
  
  newvolumeleft_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.newVolumeLeft)
}

// optional .oli.msg.OrderSide side = 10;
void OMSChangeOrderMsg::clear_side() {
  side_ = 0;
}
::oli::msg::OrderSide OMSChangeOrderMsg::side() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSChangeOrderMsg.side)
  return static_cast< ::oli::msg::OrderSide >(side_);
}
void OMSChangeOrderMsg::set_side(::oli::msg::OrderSide value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSChangeOrderMsg.side)
}

inline const OMSChangeOrderMsg* OMSChangeOrderMsg::internal_default_instance() {
  return &OMSChangeOrderMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OMSCancelOrderMsg::kOrderIdFieldNumber;
const int OMSCancelOrderMsg::kInstrumentIdFieldNumber;
const int OMSCancelOrderMsg::kPriceFieldNumber;
const int OMSCancelOrderMsg::kVolumeLeftFieldNumber;
const int OMSCancelOrderMsg::kSideFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OMSCancelOrderMsg::OMSCancelOrderMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OMSCancelOrderMsg)
}

void OMSCancelOrderMsg::InitAsDefaultInstance() {
}

OMSCancelOrderMsg::OMSCancelOrderMsg(const OMSCancelOrderMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OMSCancelOrderMsg)
}

void OMSCancelOrderMsg::SharedCtor() {
  ::memset(&orderid_, 0, reinterpret_cast<char*>(&side_) -
    reinterpret_cast<char*>(&orderid_) + sizeof(side_));
  _cached_size_ = 0;
}

OMSCancelOrderMsg::~OMSCancelOrderMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OMSCancelOrderMsg)
  SharedDtor();
}

void OMSCancelOrderMsg::SharedDtor() {
}

void OMSCancelOrderMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OMSCancelOrderMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OMSCancelOrderMsg_descriptor_;
}

const OMSCancelOrderMsg& OMSCancelOrderMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OMSCancelOrderMsg> OMSCancelOrderMsg_default_instance_;

OMSCancelOrderMsg* OMSCancelOrderMsg::New(::google::protobuf::Arena* arena) const {
  OMSCancelOrderMsg* n = new OMSCancelOrderMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OMSCancelOrderMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OMSCancelOrderMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OMSCancelOrderMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OMSCancelOrderMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, side_);

#undef ZR_HELPER_
#undef ZR_

}

bool OMSCancelOrderMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OMSCancelOrderMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 orderId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_instrumentId;
        break;
      }

      // optional uint64 instrumentId = 4;
      case 4: {
        if (tag == 32) {
         parse_instrumentId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instrumentid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_price;
        break;
      }

      // optional uint32 price = 5;
      case 5: {
        if (tag == 40) {
         parse_price:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_volumeLeft;
        break;
      }

      // optional uint32 volumeLeft = 6;
      case 6: {
        if (tag == 48) {
         parse_volumeLeft:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &volumeleft_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_side;
        break;
      }

      // optional .oli.msg.OrderSide side = 7;
      case 7: {
        if (tag == 56) {
         parse_side:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::oli::msg::OrderSide >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OMSCancelOrderMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OMSCancelOrderMsg)
  return false;
#undef DO_
}

void OMSCancelOrderMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OMSCancelOrderMsg)
  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->orderid(), output);
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->instrumentid(), output);
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->price(), output);
  }

  // optional uint32 volumeLeft = 6;
  if (this->volumeleft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->volumeleft(), output);
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->side(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OMSCancelOrderMsg)
}

::google::protobuf::uint8* OMSCancelOrderMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OMSCancelOrderMsg)
  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->orderid(), target);
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->instrumentid(), target);
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->price(), target);
  }

  // optional uint32 volumeLeft = 6;
  if (this->volumeleft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->volumeleft(), target);
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->side(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OMSCancelOrderMsg)
  return target;
}

size_t OMSCancelOrderMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OMSCancelOrderMsg)
  size_t total_size = 0;

  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instrumentid());
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }

  // optional uint32 volumeLeft = 6;
  if (this->volumeleft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->volumeleft());
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OMSCancelOrderMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OMSCancelOrderMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OMSCancelOrderMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OMSCancelOrderMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OMSCancelOrderMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OMSCancelOrderMsg)
    UnsafeMergeFrom(*source);
  }
}

void OMSCancelOrderMsg::MergeFrom(const OMSCancelOrderMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OMSCancelOrderMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OMSCancelOrderMsg::UnsafeMergeFrom(const OMSCancelOrderMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.instrumentid() != 0) {
    set_instrumentid(from.instrumentid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.volumeleft() != 0) {
    set_volumeleft(from.volumeleft());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
}

void OMSCancelOrderMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OMSCancelOrderMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OMSCancelOrderMsg::CopyFrom(const OMSCancelOrderMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OMSCancelOrderMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OMSCancelOrderMsg::IsInitialized() const {

  return true;
}

void OMSCancelOrderMsg::Swap(OMSCancelOrderMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OMSCancelOrderMsg::InternalSwap(OMSCancelOrderMsg* other) {
  std::swap(orderid_, other->orderid_);
  std::swap(instrumentid_, other->instrumentid_);
  std::swap(price_, other->price_);
  std::swap(volumeleft_, other->volumeleft_);
  std::swap(side_, other->side_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OMSCancelOrderMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OMSCancelOrderMsg_descriptor_;
  metadata.reflection = OMSCancelOrderMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OMSCancelOrderMsg

// optional uint64 orderId = 3;
void OMSCancelOrderMsg::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSCancelOrderMsg::orderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSCancelOrderMsg.orderId)
  return orderid_;
}
void OMSCancelOrderMsg::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSCancelOrderMsg.orderId)
}

// optional uint64 instrumentId = 4;
void OMSCancelOrderMsg::clear_instrumentid() {
  instrumentid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSCancelOrderMsg::instrumentid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSCancelOrderMsg.instrumentId)
  return instrumentid_;
}
void OMSCancelOrderMsg::set_instrumentid(::google::protobuf::uint64 value) {
  
  instrumentid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSCancelOrderMsg.instrumentId)
}

// optional uint32 price = 5;
void OMSCancelOrderMsg::clear_price() {
  price_ = 0u;
}
::google::protobuf::uint32 OMSCancelOrderMsg::price() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSCancelOrderMsg.price)
  return price_;
}
void OMSCancelOrderMsg::set_price(::google::protobuf::uint32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSCancelOrderMsg.price)
}

// optional uint32 volumeLeft = 6;
void OMSCancelOrderMsg::clear_volumeleft() {
  volumeleft_ = 0u;
}
::google::protobuf::uint32 OMSCancelOrderMsg::volumeleft() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSCancelOrderMsg.volumeLeft)
  return volumeleft_;
}
void OMSCancelOrderMsg::set_volumeleft(::google::protobuf::uint32 value) {
  
  volumeleft_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSCancelOrderMsg.volumeLeft)
}

// optional .oli.msg.OrderSide side = 7;
void OMSCancelOrderMsg::clear_side() {
  side_ = 0;
}
::oli::msg::OrderSide OMSCancelOrderMsg::side() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSCancelOrderMsg.side)
  return static_cast< ::oli::msg::OrderSide >(side_);
}
void OMSCancelOrderMsg::set_side(::oli::msg::OrderSide value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSCancelOrderMsg.side)
}

inline const OMSCancelOrderMsg* OMSCancelOrderMsg::internal_default_instance() {
  return &OMSCancelOrderMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OMSOrderStatusMsg::kOrderIdFieldNumber;
const int OMSOrderStatusMsg::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OMSOrderStatusMsg::OMSOrderStatusMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OMSOrderStatusMsg)
}

void OMSOrderStatusMsg::InitAsDefaultInstance() {
}

OMSOrderStatusMsg::OMSOrderStatusMsg(const OMSOrderStatusMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OMSOrderStatusMsg)
}

void OMSOrderStatusMsg::SharedCtor() {
  ::memset(&orderid_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&orderid_) + sizeof(status_));
  _cached_size_ = 0;
}

OMSOrderStatusMsg::~OMSOrderStatusMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OMSOrderStatusMsg)
  SharedDtor();
}

void OMSOrderStatusMsg::SharedDtor() {
}

void OMSOrderStatusMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OMSOrderStatusMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OMSOrderStatusMsg_descriptor_;
}

const OMSOrderStatusMsg& OMSOrderStatusMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OMSOrderStatusMsg> OMSOrderStatusMsg_default_instance_;

OMSOrderStatusMsg* OMSOrderStatusMsg::New(::google::protobuf::Arena* arena) const {
  OMSOrderStatusMsg* n = new OMSOrderStatusMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OMSOrderStatusMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OMSOrderStatusMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OMSOrderStatusMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OMSOrderStatusMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, status_);

#undef ZR_HELPER_
#undef ZR_

}

bool OMSOrderStatusMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OMSOrderStatusMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 orderId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_status;
        break;
      }

      // optional .oli.msg.OrderStatus status = 7;
      case 7: {
        if (tag == 56) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::oli::msg::OrderStatus >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OMSOrderStatusMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OMSOrderStatusMsg)
  return false;
#undef DO_
}

void OMSOrderStatusMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OMSOrderStatusMsg)
  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->orderid(), output);
  }

  // optional .oli.msg.OrderStatus status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OMSOrderStatusMsg)
}

::google::protobuf::uint8* OMSOrderStatusMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OMSOrderStatusMsg)
  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->orderid(), target);
  }

  // optional .oli.msg.OrderStatus status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OMSOrderStatusMsg)
  return target;
}

size_t OMSOrderStatusMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OMSOrderStatusMsg)
  size_t total_size = 0;

  // optional uint64 orderId = 3;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional .oli.msg.OrderStatus status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OMSOrderStatusMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OMSOrderStatusMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OMSOrderStatusMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OMSOrderStatusMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OMSOrderStatusMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OMSOrderStatusMsg)
    UnsafeMergeFrom(*source);
  }
}

void OMSOrderStatusMsg::MergeFrom(const OMSOrderStatusMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OMSOrderStatusMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OMSOrderStatusMsg::UnsafeMergeFrom(const OMSOrderStatusMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void OMSOrderStatusMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OMSOrderStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OMSOrderStatusMsg::CopyFrom(const OMSOrderStatusMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OMSOrderStatusMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OMSOrderStatusMsg::IsInitialized() const {

  return true;
}

void OMSOrderStatusMsg::Swap(OMSOrderStatusMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OMSOrderStatusMsg::InternalSwap(OMSOrderStatusMsg* other) {
  std::swap(orderid_, other->orderid_);
  std::swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OMSOrderStatusMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OMSOrderStatusMsg_descriptor_;
  metadata.reflection = OMSOrderStatusMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OMSOrderStatusMsg

// optional uint64 orderId = 3;
void OMSOrderStatusMsg::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSOrderStatusMsg::orderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSOrderStatusMsg.orderId)
  return orderid_;
}
void OMSOrderStatusMsg::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSOrderStatusMsg.orderId)
}

// optional .oli.msg.OrderStatus status = 7;
void OMSOrderStatusMsg::clear_status() {
  status_ = 0;
}
::oli::msg::OrderStatus OMSOrderStatusMsg::status() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSOrderStatusMsg.status)
  return static_cast< ::oli::msg::OrderStatus >(status_);
}
void OMSOrderStatusMsg::set_status(::oli::msg::OrderStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSOrderStatusMsg.status)
}

inline const OMSOrderStatusMsg* OMSOrderStatusMsg::internal_default_instance() {
  return &OMSOrderStatusMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OMSTradeRejectMsg::kTradeIdFieldNumber;
const int OMSTradeRejectMsg::kOrderIdFieldNumber;
const int OMSTradeRejectMsg::kRejectReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OMSTradeRejectMsg::OMSTradeRejectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OMSTradeRejectMsg)
}

void OMSTradeRejectMsg::InitAsDefaultInstance() {
}

OMSTradeRejectMsg::OMSTradeRejectMsg(const OMSTradeRejectMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OMSTradeRejectMsg)
}

void OMSTradeRejectMsg::SharedCtor() {
  ::memset(&tradeid_, 0, reinterpret_cast<char*>(&rejectreason_) -
    reinterpret_cast<char*>(&tradeid_) + sizeof(rejectreason_));
  _cached_size_ = 0;
}

OMSTradeRejectMsg::~OMSTradeRejectMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OMSTradeRejectMsg)
  SharedDtor();
}

void OMSTradeRejectMsg::SharedDtor() {
}

void OMSTradeRejectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OMSTradeRejectMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OMSTradeRejectMsg_descriptor_;
}

const OMSTradeRejectMsg& OMSTradeRejectMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OMSTradeRejectMsg> OMSTradeRejectMsg_default_instance_;

OMSTradeRejectMsg* OMSTradeRejectMsg::New(::google::protobuf::Arena* arena) const {
  OMSTradeRejectMsg* n = new OMSTradeRejectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OMSTradeRejectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OMSTradeRejectMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OMSTradeRejectMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OMSTradeRejectMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tradeid_, rejectreason_);

#undef ZR_HELPER_
#undef ZR_

}

bool OMSTradeRejectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OMSTradeRejectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 tradeId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tradeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_orderId;
        break;
      }

      // optional uint64 orderId = 4;
      case 4: {
        if (tag == 32) {
         parse_orderId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rejectReason;
        break;
      }

      // optional uint32 rejectReason = 5;
      case 5: {
        if (tag == 40) {
         parse_rejectReason:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rejectreason_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OMSTradeRejectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OMSTradeRejectMsg)
  return false;
#undef DO_
}

void OMSTradeRejectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OMSTradeRejectMsg)
  // optional uint64 tradeId = 3;
  if (this->tradeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->tradeid(), output);
  }

  // optional uint64 orderId = 4;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->orderid(), output);
  }

  // optional uint32 rejectReason = 5;
  if (this->rejectreason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rejectreason(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OMSTradeRejectMsg)
}

::google::protobuf::uint8* OMSTradeRejectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OMSTradeRejectMsg)
  // optional uint64 tradeId = 3;
  if (this->tradeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->tradeid(), target);
  }

  // optional uint64 orderId = 4;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->orderid(), target);
  }

  // optional uint32 rejectReason = 5;
  if (this->rejectreason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->rejectreason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OMSTradeRejectMsg)
  return target;
}

size_t OMSTradeRejectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OMSTradeRejectMsg)
  size_t total_size = 0;

  // optional uint64 tradeId = 3;
  if (this->tradeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tradeid());
  }

  // optional uint64 orderId = 4;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint32 rejectReason = 5;
  if (this->rejectreason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rejectreason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OMSTradeRejectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OMSTradeRejectMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OMSTradeRejectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OMSTradeRejectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OMSTradeRejectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OMSTradeRejectMsg)
    UnsafeMergeFrom(*source);
  }
}

void OMSTradeRejectMsg::MergeFrom(const OMSTradeRejectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OMSTradeRejectMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OMSTradeRejectMsg::UnsafeMergeFrom(const OMSTradeRejectMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.tradeid() != 0) {
    set_tradeid(from.tradeid());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.rejectreason() != 0) {
    set_rejectreason(from.rejectreason());
  }
}

void OMSTradeRejectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OMSTradeRejectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OMSTradeRejectMsg::CopyFrom(const OMSTradeRejectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OMSTradeRejectMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OMSTradeRejectMsg::IsInitialized() const {

  return true;
}

void OMSTradeRejectMsg::Swap(OMSTradeRejectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OMSTradeRejectMsg::InternalSwap(OMSTradeRejectMsg* other) {
  std::swap(tradeid_, other->tradeid_);
  std::swap(orderid_, other->orderid_);
  std::swap(rejectreason_, other->rejectreason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OMSTradeRejectMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OMSTradeRejectMsg_descriptor_;
  metadata.reflection = OMSTradeRejectMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OMSTradeRejectMsg

// optional uint64 tradeId = 3;
void OMSTradeRejectMsg::clear_tradeid() {
  tradeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSTradeRejectMsg::tradeid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSTradeRejectMsg.tradeId)
  return tradeid_;
}
void OMSTradeRejectMsg::set_tradeid(::google::protobuf::uint64 value) {
  
  tradeid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSTradeRejectMsg.tradeId)
}

// optional uint64 orderId = 4;
void OMSTradeRejectMsg::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSTradeRejectMsg::orderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSTradeRejectMsg.orderId)
  return orderid_;
}
void OMSTradeRejectMsg::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSTradeRejectMsg.orderId)
}

// optional uint32 rejectReason = 5;
void OMSTradeRejectMsg::clear_rejectreason() {
  rejectreason_ = 0u;
}
::google::protobuf::uint32 OMSTradeRejectMsg::rejectreason() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSTradeRejectMsg.rejectReason)
  return rejectreason_;
}
void OMSTradeRejectMsg::set_rejectreason(::google::protobuf::uint32 value) {
  
  rejectreason_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSTradeRejectMsg.rejectReason)
}

inline const OMSTradeRejectMsg* OMSTradeRejectMsg::internal_default_instance() {
  return &OMSTradeRejectMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OMSTradeCorrectRejectMsg::kTradeIdFieldNumber;
const int OMSTradeCorrectRejectMsg::kOrderIdFieldNumber;
const int OMSTradeCorrectRejectMsg::kRejectReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OMSTradeCorrectRejectMsg::OMSTradeCorrectRejectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OMSTradeCorrectRejectMsg)
}

void OMSTradeCorrectRejectMsg::InitAsDefaultInstance() {
}

OMSTradeCorrectRejectMsg::OMSTradeCorrectRejectMsg(const OMSTradeCorrectRejectMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OMSTradeCorrectRejectMsg)
}

void OMSTradeCorrectRejectMsg::SharedCtor() {
  ::memset(&tradeid_, 0, reinterpret_cast<char*>(&rejectreason_) -
    reinterpret_cast<char*>(&tradeid_) + sizeof(rejectreason_));
  _cached_size_ = 0;
}

OMSTradeCorrectRejectMsg::~OMSTradeCorrectRejectMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OMSTradeCorrectRejectMsg)
  SharedDtor();
}

void OMSTradeCorrectRejectMsg::SharedDtor() {
}

void OMSTradeCorrectRejectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OMSTradeCorrectRejectMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OMSTradeCorrectRejectMsg_descriptor_;
}

const OMSTradeCorrectRejectMsg& OMSTradeCorrectRejectMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OMSTradeCorrectRejectMsg> OMSTradeCorrectRejectMsg_default_instance_;

OMSTradeCorrectRejectMsg* OMSTradeCorrectRejectMsg::New(::google::protobuf::Arena* arena) const {
  OMSTradeCorrectRejectMsg* n = new OMSTradeCorrectRejectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OMSTradeCorrectRejectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OMSTradeCorrectRejectMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OMSTradeCorrectRejectMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OMSTradeCorrectRejectMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tradeid_, rejectreason_);

#undef ZR_HELPER_
#undef ZR_

}

bool OMSTradeCorrectRejectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OMSTradeCorrectRejectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 tradeId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tradeid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_orderId;
        break;
      }

      // optional uint64 orderId = 4;
      case 4: {
        if (tag == 32) {
         parse_orderId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rejectReason;
        break;
      }

      // optional uint32 rejectReason = 5;
      case 5: {
        if (tag == 40) {
         parse_rejectReason:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rejectreason_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OMSTradeCorrectRejectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OMSTradeCorrectRejectMsg)
  return false;
#undef DO_
}

void OMSTradeCorrectRejectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OMSTradeCorrectRejectMsg)
  // optional uint64 tradeId = 3;
  if (this->tradeid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->tradeid(), output);
  }

  // optional uint64 orderId = 4;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->orderid(), output);
  }

  // optional uint32 rejectReason = 5;
  if (this->rejectreason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rejectreason(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OMSTradeCorrectRejectMsg)
}

::google::protobuf::uint8* OMSTradeCorrectRejectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OMSTradeCorrectRejectMsg)
  // optional uint64 tradeId = 3;
  if (this->tradeid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->tradeid(), target);
  }

  // optional uint64 orderId = 4;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->orderid(), target);
  }

  // optional uint32 rejectReason = 5;
  if (this->rejectreason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->rejectreason(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OMSTradeCorrectRejectMsg)
  return target;
}

size_t OMSTradeCorrectRejectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OMSTradeCorrectRejectMsg)
  size_t total_size = 0;

  // optional uint64 tradeId = 3;
  if (this->tradeid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->tradeid());
  }

  // optional uint64 orderId = 4;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional uint32 rejectReason = 5;
  if (this->rejectreason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rejectreason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OMSTradeCorrectRejectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OMSTradeCorrectRejectMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OMSTradeCorrectRejectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OMSTradeCorrectRejectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OMSTradeCorrectRejectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OMSTradeCorrectRejectMsg)
    UnsafeMergeFrom(*source);
  }
}

void OMSTradeCorrectRejectMsg::MergeFrom(const OMSTradeCorrectRejectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OMSTradeCorrectRejectMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OMSTradeCorrectRejectMsg::UnsafeMergeFrom(const OMSTradeCorrectRejectMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.tradeid() != 0) {
    set_tradeid(from.tradeid());
  }
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.rejectreason() != 0) {
    set_rejectreason(from.rejectreason());
  }
}

void OMSTradeCorrectRejectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OMSTradeCorrectRejectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OMSTradeCorrectRejectMsg::CopyFrom(const OMSTradeCorrectRejectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OMSTradeCorrectRejectMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OMSTradeCorrectRejectMsg::IsInitialized() const {

  return true;
}

void OMSTradeCorrectRejectMsg::Swap(OMSTradeCorrectRejectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OMSTradeCorrectRejectMsg::InternalSwap(OMSTradeCorrectRejectMsg* other) {
  std::swap(tradeid_, other->tradeid_);
  std::swap(orderid_, other->orderid_);
  std::swap(rejectreason_, other->rejectreason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OMSTradeCorrectRejectMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OMSTradeCorrectRejectMsg_descriptor_;
  metadata.reflection = OMSTradeCorrectRejectMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OMSTradeCorrectRejectMsg

// optional uint64 tradeId = 3;
void OMSTradeCorrectRejectMsg::clear_tradeid() {
  tradeid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSTradeCorrectRejectMsg::tradeid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSTradeCorrectRejectMsg.tradeId)
  return tradeid_;
}
void OMSTradeCorrectRejectMsg::set_tradeid(::google::protobuf::uint64 value) {
  
  tradeid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSTradeCorrectRejectMsg.tradeId)
}

// optional uint64 orderId = 4;
void OMSTradeCorrectRejectMsg::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OMSTradeCorrectRejectMsg::orderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSTradeCorrectRejectMsg.orderId)
  return orderid_;
}
void OMSTradeCorrectRejectMsg::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSTradeCorrectRejectMsg.orderId)
}

// optional uint32 rejectReason = 5;
void OMSTradeCorrectRejectMsg::clear_rejectreason() {
  rejectreason_ = 0u;
}
::google::protobuf::uint32 OMSTradeCorrectRejectMsg::rejectreason() const {
  // @@protoc_insertion_point(field_get:oli.msg.OMSTradeCorrectRejectMsg.rejectReason)
  return rejectreason_;
}
void OMSTradeCorrectRejectMsg::set_rejectreason(::google::protobuf::uint32 value) {
  
  rejectreason_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OMSTradeCorrectRejectMsg.rejectReason)
}

inline const OMSTradeCorrectRejectMsg* OMSTradeCorrectRejectMsg::internal_default_instance() {
  return &OMSTradeCorrectRejectMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MEOrdersMatchedMsg::kInstrumentIdFieldNumber;
const int MEOrdersMatchedMsg::kMatchIdFieldNumber;
const int MEOrdersMatchedMsg::kBidOrderIdFieldNumber;
const int MEOrdersMatchedMsg::kAskOrderIdFieldNumber;
const int MEOrdersMatchedMsg::kBidPriceFieldNumber;
const int MEOrdersMatchedMsg::kAskPriceFieldNumber;
const int MEOrdersMatchedMsg::kMatchedQtyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MEOrdersMatchedMsg::MEOrdersMatchedMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.MEOrdersMatchedMsg)
}

void MEOrdersMatchedMsg::InitAsDefaultInstance() {
}

MEOrdersMatchedMsg::MEOrdersMatchedMsg(const MEOrdersMatchedMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.MEOrdersMatchedMsg)
}

void MEOrdersMatchedMsg::SharedCtor() {
  ::memset(&instrumentid_, 0, reinterpret_cast<char*>(&matchedqty_) -
    reinterpret_cast<char*>(&instrumentid_) + sizeof(matchedqty_));
  _cached_size_ = 0;
}

MEOrdersMatchedMsg::~MEOrdersMatchedMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.MEOrdersMatchedMsg)
  SharedDtor();
}

void MEOrdersMatchedMsg::SharedDtor() {
}

void MEOrdersMatchedMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MEOrdersMatchedMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MEOrdersMatchedMsg_descriptor_;
}

const MEOrdersMatchedMsg& MEOrdersMatchedMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MEOrdersMatchedMsg> MEOrdersMatchedMsg_default_instance_;

MEOrdersMatchedMsg* MEOrdersMatchedMsg::New(::google::protobuf::Arena* arena) const {
  MEOrdersMatchedMsg* n = new MEOrdersMatchedMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MEOrdersMatchedMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.MEOrdersMatchedMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MEOrdersMatchedMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MEOrdersMatchedMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(instrumentid_, matchedqty_);

#undef ZR_HELPER_
#undef ZR_

}

bool MEOrdersMatchedMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.MEOrdersMatchedMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 instrumentId = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instrumentid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_matchId;
        break;
      }

      // optional uint64 matchId = 2;
      case 2: {
        if (tag == 16) {
         parse_matchId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bidOrderId;
        break;
      }

      // optional uint64 bidOrderId = 3;
      case 3: {
        if (tag == 24) {
         parse_bidOrderId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bidorderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_askOrderId;
        break;
      }

      // optional uint64 askOrderId = 4;
      case 4: {
        if (tag == 32) {
         parse_askOrderId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &askorderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bidPrice;
        break;
      }

      // optional uint32 bidPrice = 5;
      case 5: {
        if (tag == 40) {
         parse_bidPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bidprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_askPrice;
        break;
      }

      // optional uint32 askPrice = 6;
      case 6: {
        if (tag == 48) {
         parse_askPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &askprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_matchedQty;
        break;
      }

      // optional uint32 matchedQty = 7;
      case 7: {
        if (tag == 56) {
         parse_matchedQty:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchedqty_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.MEOrdersMatchedMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.MEOrdersMatchedMsg)
  return false;
#undef DO_
}

void MEOrdersMatchedMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.MEOrdersMatchedMsg)
  // optional uint64 instrumentId = 1;
  if (this->instrumentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->instrumentid(), output);
  }

  // optional uint64 matchId = 2;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->matchid(), output);
  }

  // optional uint64 bidOrderId = 3;
  if (this->bidorderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bidorderid(), output);
  }

  // optional uint64 askOrderId = 4;
  if (this->askorderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->askorderid(), output);
  }

  // optional uint32 bidPrice = 5;
  if (this->bidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->bidprice(), output);
  }

  // optional uint32 askPrice = 6;
  if (this->askprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->askprice(), output);
  }

  // optional uint32 matchedQty = 7;
  if (this->matchedqty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->matchedqty(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.MEOrdersMatchedMsg)
}

::google::protobuf::uint8* MEOrdersMatchedMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.MEOrdersMatchedMsg)
  // optional uint64 instrumentId = 1;
  if (this->instrumentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->instrumentid(), target);
  }

  // optional uint64 matchId = 2;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->matchid(), target);
  }

  // optional uint64 bidOrderId = 3;
  if (this->bidorderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bidorderid(), target);
  }

  // optional uint64 askOrderId = 4;
  if (this->askorderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->askorderid(), target);
  }

  // optional uint32 bidPrice = 5;
  if (this->bidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->bidprice(), target);
  }

  // optional uint32 askPrice = 6;
  if (this->askprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->askprice(), target);
  }

  // optional uint32 matchedQty = 7;
  if (this->matchedqty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->matchedqty(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.MEOrdersMatchedMsg)
  return target;
}

size_t MEOrdersMatchedMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.MEOrdersMatchedMsg)
  size_t total_size = 0;

  // optional uint64 instrumentId = 1;
  if (this->instrumentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instrumentid());
  }

  // optional uint64 matchId = 2;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->matchid());
  }

  // optional uint64 bidOrderId = 3;
  if (this->bidorderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bidorderid());
  }

  // optional uint64 askOrderId = 4;
  if (this->askorderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->askorderid());
  }

  // optional uint32 bidPrice = 5;
  if (this->bidprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bidprice());
  }

  // optional uint32 askPrice = 6;
  if (this->askprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->askprice());
  }

  // optional uint32 matchedQty = 7;
  if (this->matchedqty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchedqty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MEOrdersMatchedMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.MEOrdersMatchedMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MEOrdersMatchedMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MEOrdersMatchedMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.MEOrdersMatchedMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.MEOrdersMatchedMsg)
    UnsafeMergeFrom(*source);
  }
}

void MEOrdersMatchedMsg::MergeFrom(const MEOrdersMatchedMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.MEOrdersMatchedMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MEOrdersMatchedMsg::UnsafeMergeFrom(const MEOrdersMatchedMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.instrumentid() != 0) {
    set_instrumentid(from.instrumentid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.bidorderid() != 0) {
    set_bidorderid(from.bidorderid());
  }
  if (from.askorderid() != 0) {
    set_askorderid(from.askorderid());
  }
  if (from.bidprice() != 0) {
    set_bidprice(from.bidprice());
  }
  if (from.askprice() != 0) {
    set_askprice(from.askprice());
  }
  if (from.matchedqty() != 0) {
    set_matchedqty(from.matchedqty());
  }
}

void MEOrdersMatchedMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.MEOrdersMatchedMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MEOrdersMatchedMsg::CopyFrom(const MEOrdersMatchedMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.MEOrdersMatchedMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MEOrdersMatchedMsg::IsInitialized() const {

  return true;
}

void MEOrdersMatchedMsg::Swap(MEOrdersMatchedMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MEOrdersMatchedMsg::InternalSwap(MEOrdersMatchedMsg* other) {
  std::swap(instrumentid_, other->instrumentid_);
  std::swap(matchid_, other->matchid_);
  std::swap(bidorderid_, other->bidorderid_);
  std::swap(askorderid_, other->askorderid_);
  std::swap(bidprice_, other->bidprice_);
  std::swap(askprice_, other->askprice_);
  std::swap(matchedqty_, other->matchedqty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MEOrdersMatchedMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MEOrdersMatchedMsg_descriptor_;
  metadata.reflection = MEOrdersMatchedMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MEOrdersMatchedMsg

// optional uint64 instrumentId = 1;
void MEOrdersMatchedMsg::clear_instrumentid() {
  instrumentid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MEOrdersMatchedMsg::instrumentid() const {
  // @@protoc_insertion_point(field_get:oli.msg.MEOrdersMatchedMsg.instrumentId)
  return instrumentid_;
}
void MEOrdersMatchedMsg::set_instrumentid(::google::protobuf::uint64 value) {
  
  instrumentid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MEOrdersMatchedMsg.instrumentId)
}

// optional uint64 matchId = 2;
void MEOrdersMatchedMsg::clear_matchid() {
  matchid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MEOrdersMatchedMsg::matchid() const {
  // @@protoc_insertion_point(field_get:oli.msg.MEOrdersMatchedMsg.matchId)
  return matchid_;
}
void MEOrdersMatchedMsg::set_matchid(::google::protobuf::uint64 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MEOrdersMatchedMsg.matchId)
}

// optional uint64 bidOrderId = 3;
void MEOrdersMatchedMsg::clear_bidorderid() {
  bidorderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MEOrdersMatchedMsg::bidorderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.MEOrdersMatchedMsg.bidOrderId)
  return bidorderid_;
}
void MEOrdersMatchedMsg::set_bidorderid(::google::protobuf::uint64 value) {
  
  bidorderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MEOrdersMatchedMsg.bidOrderId)
}

// optional uint64 askOrderId = 4;
void MEOrdersMatchedMsg::clear_askorderid() {
  askorderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MEOrdersMatchedMsg::askorderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.MEOrdersMatchedMsg.askOrderId)
  return askorderid_;
}
void MEOrdersMatchedMsg::set_askorderid(::google::protobuf::uint64 value) {
  
  askorderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MEOrdersMatchedMsg.askOrderId)
}

// optional uint32 bidPrice = 5;
void MEOrdersMatchedMsg::clear_bidprice() {
  bidprice_ = 0u;
}
::google::protobuf::uint32 MEOrdersMatchedMsg::bidprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.MEOrdersMatchedMsg.bidPrice)
  return bidprice_;
}
void MEOrdersMatchedMsg::set_bidprice(::google::protobuf::uint32 value) {
  
  bidprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MEOrdersMatchedMsg.bidPrice)
}

// optional uint32 askPrice = 6;
void MEOrdersMatchedMsg::clear_askprice() {
  askprice_ = 0u;
}
::google::protobuf::uint32 MEOrdersMatchedMsg::askprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.MEOrdersMatchedMsg.askPrice)
  return askprice_;
}
void MEOrdersMatchedMsg::set_askprice(::google::protobuf::uint32 value) {
  
  askprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MEOrdersMatchedMsg.askPrice)
}

// optional uint32 matchedQty = 7;
void MEOrdersMatchedMsg::clear_matchedqty() {
  matchedqty_ = 0u;
}
::google::protobuf::uint32 MEOrdersMatchedMsg::matchedqty() const {
  // @@protoc_insertion_point(field_get:oli.msg.MEOrdersMatchedMsg.matchedQty)
  return matchedqty_;
}
void MEOrdersMatchedMsg::set_matchedqty(::google::protobuf::uint32 value) {
  
  matchedqty_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.MEOrdersMatchedMsg.matchedQty)
}

inline const MEOrdersMatchedMsg* MEOrdersMatchedMsg::internal_default_instance() {
  return &MEOrdersMatchedMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OBBookChangeMsg::kOrderIdFieldNumber;
const int OBBookChangeMsg::kTypeFieldNumber;
const int OBBookChangeMsg::kInstrumentIdFieldNumber;
const int OBBookChangeMsg::kPriceFieldNumber;
const int OBBookChangeMsg::kVolumeFieldNumber;
const int OBBookChangeMsg::kSideFieldNumber;
const int OBBookChangeMsg::kPrevPriceFieldNumber;
const int OBBookChangeMsg::kPrevVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OBBookChangeMsg::OBBookChangeMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OBBookChangeMsg)
}

void OBBookChangeMsg::InitAsDefaultInstance() {
}

OBBookChangeMsg::OBBookChangeMsg(const OBBookChangeMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OBBookChangeMsg)
}

void OBBookChangeMsg::SharedCtor() {
  ::memset(&orderid_, 0, reinterpret_cast<char*>(&prevvolume_) -
    reinterpret_cast<char*>(&orderid_) + sizeof(prevvolume_));
  _cached_size_ = 0;
}

OBBookChangeMsg::~OBBookChangeMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OBBookChangeMsg)
  SharedDtor();
}

void OBBookChangeMsg::SharedDtor() {
}

void OBBookChangeMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OBBookChangeMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OBBookChangeMsg_descriptor_;
}

const OBBookChangeMsg& OBBookChangeMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OBBookChangeMsg> OBBookChangeMsg_default_instance_;

OBBookChangeMsg* OBBookChangeMsg::New(::google::protobuf::Arena* arena) const {
  OBBookChangeMsg* n = new OBBookChangeMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OBBookChangeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OBBookChangeMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OBBookChangeMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OBBookChangeMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(orderid_, prevvolume_);

#undef ZR_HELPER_
#undef ZR_

}

bool OBBookChangeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OBBookChangeMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 orderId = 2;
      case 2: {
        if (tag == 16) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &orderid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .oli.msg.OBookChangeType type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::oli::msg::OBookChangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_instrumentId;
        break;
      }

      // optional uint64 instrumentId = 4;
      case 4: {
        if (tag == 32) {
         parse_instrumentId:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instrumentid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_price;
        break;
      }

      // optional uint32 price = 5;
      case 5: {
        if (tag == 40) {
         parse_price:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_volume;
        break;
      }

      // optional uint32 volume = 6;
      case 6: {
        if (tag == 48) {
         parse_volume:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_side;
        break;
      }

      // optional .oli.msg.OrderSide side = 7;
      case 7: {
        if (tag == 56) {
         parse_side:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_side(static_cast< ::oli::msg::OrderSide >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_prevPrice;
        break;
      }

      // optional uint32 prevPrice = 8;
      case 8: {
        if (tag == 64) {
         parse_prevPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prevprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_prevVolume;
        break;
      }

      // optional uint32 prevVolume = 9;
      case 9: {
        if (tag == 72) {
         parse_prevVolume:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prevvolume_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OBBookChangeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OBBookChangeMsg)
  return false;
#undef DO_
}

void OBBookChangeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OBBookChangeMsg)
  // optional uint64 orderId = 2;
  if (this->orderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->orderid(), output);
  }

  // optional .oli.msg.OBookChangeType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->instrumentid(), output);
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->price(), output);
  }

  // optional uint32 volume = 6;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->volume(), output);
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->side(), output);
  }

  // optional uint32 prevPrice = 8;
  if (this->prevprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->prevprice(), output);
  }

  // optional uint32 prevVolume = 9;
  if (this->prevvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->prevvolume(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OBBookChangeMsg)
}

::google::protobuf::uint8* OBBookChangeMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OBBookChangeMsg)
  // optional uint64 orderId = 2;
  if (this->orderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->orderid(), target);
  }

  // optional .oli.msg.OBookChangeType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->instrumentid(), target);
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->price(), target);
  }

  // optional uint32 volume = 6;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->volume(), target);
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->side(), target);
  }

  // optional uint32 prevPrice = 8;
  if (this->prevprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->prevprice(), target);
  }

  // optional uint32 prevVolume = 9;
  if (this->prevvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->prevvolume(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OBBookChangeMsg)
  return target;
}

size_t OBBookChangeMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OBBookChangeMsg)
  size_t total_size = 0;

  // optional uint64 orderId = 2;
  if (this->orderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->orderid());
  }

  // optional .oli.msg.OBookChangeType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional uint64 instrumentId = 4;
  if (this->instrumentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instrumentid());
  }

  // optional uint32 price = 5;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }

  // optional uint32 volume = 6;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->volume());
  }

  // optional .oli.msg.OrderSide side = 7;
  if (this->side() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
  }

  // optional uint32 prevPrice = 8;
  if (this->prevprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevprice());
  }

  // optional uint32 prevVolume = 9;
  if (this->prevvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevvolume());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OBBookChangeMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OBBookChangeMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OBBookChangeMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OBBookChangeMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OBBookChangeMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OBBookChangeMsg)
    UnsafeMergeFrom(*source);
  }
}

void OBBookChangeMsg::MergeFrom(const OBBookChangeMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OBBookChangeMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OBBookChangeMsg::UnsafeMergeFrom(const OBBookChangeMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.orderid() != 0) {
    set_orderid(from.orderid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.instrumentid() != 0) {
    set_instrumentid(from.instrumentid());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.side() != 0) {
    set_side(from.side());
  }
  if (from.prevprice() != 0) {
    set_prevprice(from.prevprice());
  }
  if (from.prevvolume() != 0) {
    set_prevvolume(from.prevvolume());
  }
}

void OBBookChangeMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OBBookChangeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OBBookChangeMsg::CopyFrom(const OBBookChangeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OBBookChangeMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OBBookChangeMsg::IsInitialized() const {

  return true;
}

void OBBookChangeMsg::Swap(OBBookChangeMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OBBookChangeMsg::InternalSwap(OBBookChangeMsg* other) {
  std::swap(orderid_, other->orderid_);
  std::swap(type_, other->type_);
  std::swap(instrumentid_, other->instrumentid_);
  std::swap(price_, other->price_);
  std::swap(volume_, other->volume_);
  std::swap(side_, other->side_);
  std::swap(prevprice_, other->prevprice_);
  std::swap(prevvolume_, other->prevvolume_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OBBookChangeMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OBBookChangeMsg_descriptor_;
  metadata.reflection = OBBookChangeMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OBBookChangeMsg

// optional uint64 orderId = 2;
void OBBookChangeMsg::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OBBookChangeMsg::orderid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.orderId)
  return orderid_;
}
void OBBookChangeMsg::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.orderId)
}

// optional .oli.msg.OBookChangeType type = 3;
void OBBookChangeMsg::clear_type() {
  type_ = 0;
}
::oli::msg::OBookChangeType OBBookChangeMsg::type() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.type)
  return static_cast< ::oli::msg::OBookChangeType >(type_);
}
void OBBookChangeMsg::set_type(::oli::msg::OBookChangeType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.type)
}

// optional uint64 instrumentId = 4;
void OBBookChangeMsg::clear_instrumentid() {
  instrumentid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OBBookChangeMsg::instrumentid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.instrumentId)
  return instrumentid_;
}
void OBBookChangeMsg::set_instrumentid(::google::protobuf::uint64 value) {
  
  instrumentid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.instrumentId)
}

// optional uint32 price = 5;
void OBBookChangeMsg::clear_price() {
  price_ = 0u;
}
::google::protobuf::uint32 OBBookChangeMsg::price() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.price)
  return price_;
}
void OBBookChangeMsg::set_price(::google::protobuf::uint32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.price)
}

// optional uint32 volume = 6;
void OBBookChangeMsg::clear_volume() {
  volume_ = 0u;
}
::google::protobuf::uint32 OBBookChangeMsg::volume() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.volume)
  return volume_;
}
void OBBookChangeMsg::set_volume(::google::protobuf::uint32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.volume)
}

// optional .oli.msg.OrderSide side = 7;
void OBBookChangeMsg::clear_side() {
  side_ = 0;
}
::oli::msg::OrderSide OBBookChangeMsg::side() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.side)
  return static_cast< ::oli::msg::OrderSide >(side_);
}
void OBBookChangeMsg::set_side(::oli::msg::OrderSide value) {
  
  side_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.side)
}

// optional uint32 prevPrice = 8;
void OBBookChangeMsg::clear_prevprice() {
  prevprice_ = 0u;
}
::google::protobuf::uint32 OBBookChangeMsg::prevprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.prevPrice)
  return prevprice_;
}
void OBBookChangeMsg::set_prevprice(::google::protobuf::uint32 value) {
  
  prevprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.prevPrice)
}

// optional uint32 prevVolume = 9;
void OBBookChangeMsg::clear_prevvolume() {
  prevvolume_ = 0u;
}
::google::protobuf::uint32 OBBookChangeMsg::prevvolume() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangeMsg.prevVolume)
  return prevvolume_;
}
void OBBookChangeMsg::set_prevvolume(::google::protobuf::uint32 value) {
  
  prevvolume_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangeMsg.prevVolume)
}

inline const OBBookChangeMsg* OBBookChangeMsg::internal_default_instance() {
  return &OBBookChangeMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OBBookChangesMsg::kInstrumentIdFieldNumber;
const int OBBookChangesMsg::kBidTypeFieldNumber;
const int OBBookChangesMsg::kAskTypeFieldNumber;
const int OBBookChangesMsg::kBidPriceFieldNumber;
const int OBBookChangesMsg::kBidVolumeFieldNumber;
const int OBBookChangesMsg::kPrevBidPriceFieldNumber;
const int OBBookChangesMsg::kPrevBidVolumeFieldNumber;
const int OBBookChangesMsg::kAskPriceFieldNumber;
const int OBBookChangesMsg::kAskVolumeFieldNumber;
const int OBBookChangesMsg::kPrevAskPriceFieldNumber;
const int OBBookChangesMsg::kPrevAskVolumeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OBBookChangesMsg::OBBookChangesMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:oli.msg.OBBookChangesMsg)
}

void OBBookChangesMsg::InitAsDefaultInstance() {
}

OBBookChangesMsg::OBBookChangesMsg(const OBBookChangesMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:oli.msg.OBBookChangesMsg)
}

void OBBookChangesMsg::SharedCtor() {
  ::memset(&instrumentid_, 0, reinterpret_cast<char*>(&prevaskvolume_) -
    reinterpret_cast<char*>(&instrumentid_) + sizeof(prevaskvolume_));
  _cached_size_ = 0;
}

OBBookChangesMsg::~OBBookChangesMsg() {
  // @@protoc_insertion_point(destructor:oli.msg.OBBookChangesMsg)
  SharedDtor();
}

void OBBookChangesMsg::SharedDtor() {
}

void OBBookChangesMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OBBookChangesMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OBBookChangesMsg_descriptor_;
}

const OBBookChangesMsg& OBBookChangesMsg::default_instance() {
  protobuf_InitDefaults_oli_5fmessageslib_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OBBookChangesMsg> OBBookChangesMsg_default_instance_;

OBBookChangesMsg* OBBookChangesMsg::New(::google::protobuf::Arena* arena) const {
  OBBookChangesMsg* n = new OBBookChangesMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OBBookChangesMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:oli.msg.OBBookChangesMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OBBookChangesMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OBBookChangesMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(instrumentid_, askprice_);
  ZR_(askvolume_, prevaskvolume_);

#undef ZR_HELPER_
#undef ZR_

}

bool OBBookChangesMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:oli.msg.OBBookChangesMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 instrumentId = 3;
      case 3: {
        if (tag == 24) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &instrumentid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bidType;
        break;
      }

      // optional .oli.msg.OBookChangeType bidType = 4;
      case 4: {
        if (tag == 32) {
         parse_bidType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bidtype(static_cast< ::oli::msg::OBookChangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_askType;
        break;
      }

      // optional .oli.msg.OBookChangeType askType = 5;
      case 5: {
        if (tag == 40) {
         parse_askType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_asktype(static_cast< ::oli::msg::OBookChangeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_bidPrice;
        break;
      }

      // optional uint32 bidPrice = 6;
      case 6: {
        if (tag == 48) {
         parse_bidPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bidprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_bidVolume;
        break;
      }

      // optional uint32 bidVolume = 7;
      case 7: {
        if (tag == 56) {
         parse_bidVolume:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bidvolume_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_prevBidPrice;
        break;
      }

      // optional uint32 prevBidPrice = 8;
      case 8: {
        if (tag == 64) {
         parse_prevBidPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prevbidprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_prevBidVolume;
        break;
      }

      // optional uint32 prevBidVolume = 9;
      case 9: {
        if (tag == 72) {
         parse_prevBidVolume:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prevbidvolume_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_askPrice;
        break;
      }

      // optional uint32 askPrice = 10;
      case 10: {
        if (tag == 80) {
         parse_askPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &askprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_askVolume;
        break;
      }

      // optional uint32 askVolume = 11;
      case 11: {
        if (tag == 88) {
         parse_askVolume:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &askvolume_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_prevAskPrice;
        break;
      }

      // optional uint32 prevAskPrice = 12;
      case 12: {
        if (tag == 96) {
         parse_prevAskPrice:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prevaskprice_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_prevAskVolume;
        break;
      }

      // optional uint32 prevAskVolume = 13;
      case 13: {
        if (tag == 104) {
         parse_prevAskVolume:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prevaskvolume_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:oli.msg.OBBookChangesMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:oli.msg.OBBookChangesMsg)
  return false;
#undef DO_
}

void OBBookChangesMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:oli.msg.OBBookChangesMsg)
  // optional uint64 instrumentId = 3;
  if (this->instrumentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->instrumentid(), output);
  }

  // optional .oli.msg.OBookChangeType bidType = 4;
  if (this->bidtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->bidtype(), output);
  }

  // optional .oli.msg.OBookChangeType askType = 5;
  if (this->asktype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->asktype(), output);
  }

  // optional uint32 bidPrice = 6;
  if (this->bidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->bidprice(), output);
  }

  // optional uint32 bidVolume = 7;
  if (this->bidvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bidvolume(), output);
  }

  // optional uint32 prevBidPrice = 8;
  if (this->prevbidprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->prevbidprice(), output);
  }

  // optional uint32 prevBidVolume = 9;
  if (this->prevbidvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->prevbidvolume(), output);
  }

  // optional uint32 askPrice = 10;
  if (this->askprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->askprice(), output);
  }

  // optional uint32 askVolume = 11;
  if (this->askvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->askvolume(), output);
  }

  // optional uint32 prevAskPrice = 12;
  if (this->prevaskprice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->prevaskprice(), output);
  }

  // optional uint32 prevAskVolume = 13;
  if (this->prevaskvolume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->prevaskvolume(), output);
  }

  // @@protoc_insertion_point(serialize_end:oli.msg.OBBookChangesMsg)
}

::google::protobuf::uint8* OBBookChangesMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:oli.msg.OBBookChangesMsg)
  // optional uint64 instrumentId = 3;
  if (this->instrumentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->instrumentid(), target);
  }

  // optional .oli.msg.OBookChangeType bidType = 4;
  if (this->bidtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->bidtype(), target);
  }

  // optional .oli.msg.OBookChangeType askType = 5;
  if (this->asktype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->asktype(), target);
  }

  // optional uint32 bidPrice = 6;
  if (this->bidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->bidprice(), target);
  }

  // optional uint32 bidVolume = 7;
  if (this->bidvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bidvolume(), target);
  }

  // optional uint32 prevBidPrice = 8;
  if (this->prevbidprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->prevbidprice(), target);
  }

  // optional uint32 prevBidVolume = 9;
  if (this->prevbidvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->prevbidvolume(), target);
  }

  // optional uint32 askPrice = 10;
  if (this->askprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->askprice(), target);
  }

  // optional uint32 askVolume = 11;
  if (this->askvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->askvolume(), target);
  }

  // optional uint32 prevAskPrice = 12;
  if (this->prevaskprice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->prevaskprice(), target);
  }

  // optional uint32 prevAskVolume = 13;
  if (this->prevaskvolume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->prevaskvolume(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:oli.msg.OBBookChangesMsg)
  return target;
}

size_t OBBookChangesMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:oli.msg.OBBookChangesMsg)
  size_t total_size = 0;

  // optional uint64 instrumentId = 3;
  if (this->instrumentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->instrumentid());
  }

  // optional .oli.msg.OBookChangeType bidType = 4;
  if (this->bidtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bidtype());
  }

  // optional .oli.msg.OBookChangeType askType = 5;
  if (this->asktype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->asktype());
  }

  // optional uint32 bidPrice = 6;
  if (this->bidprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bidprice());
  }

  // optional uint32 bidVolume = 7;
  if (this->bidvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bidvolume());
  }

  // optional uint32 prevBidPrice = 8;
  if (this->prevbidprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevbidprice());
  }

  // optional uint32 prevBidVolume = 9;
  if (this->prevbidvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevbidvolume());
  }

  // optional uint32 askPrice = 10;
  if (this->askprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->askprice());
  }

  // optional uint32 askVolume = 11;
  if (this->askvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->askvolume());
  }

  // optional uint32 prevAskPrice = 12;
  if (this->prevaskprice() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevaskprice());
  }

  // optional uint32 prevAskVolume = 13;
  if (this->prevaskvolume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prevaskvolume());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OBBookChangesMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:oli.msg.OBBookChangesMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OBBookChangesMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OBBookChangesMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:oli.msg.OBBookChangesMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:oli.msg.OBBookChangesMsg)
    UnsafeMergeFrom(*source);
  }
}

void OBBookChangesMsg::MergeFrom(const OBBookChangesMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:oli.msg.OBBookChangesMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OBBookChangesMsg::UnsafeMergeFrom(const OBBookChangesMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.instrumentid() != 0) {
    set_instrumentid(from.instrumentid());
  }
  if (from.bidtype() != 0) {
    set_bidtype(from.bidtype());
  }
  if (from.asktype() != 0) {
    set_asktype(from.asktype());
  }
  if (from.bidprice() != 0) {
    set_bidprice(from.bidprice());
  }
  if (from.bidvolume() != 0) {
    set_bidvolume(from.bidvolume());
  }
  if (from.prevbidprice() != 0) {
    set_prevbidprice(from.prevbidprice());
  }
  if (from.prevbidvolume() != 0) {
    set_prevbidvolume(from.prevbidvolume());
  }
  if (from.askprice() != 0) {
    set_askprice(from.askprice());
  }
  if (from.askvolume() != 0) {
    set_askvolume(from.askvolume());
  }
  if (from.prevaskprice() != 0) {
    set_prevaskprice(from.prevaskprice());
  }
  if (from.prevaskvolume() != 0) {
    set_prevaskvolume(from.prevaskvolume());
  }
}

void OBBookChangesMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:oli.msg.OBBookChangesMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OBBookChangesMsg::CopyFrom(const OBBookChangesMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:oli.msg.OBBookChangesMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OBBookChangesMsg::IsInitialized() const {

  return true;
}

void OBBookChangesMsg::Swap(OBBookChangesMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OBBookChangesMsg::InternalSwap(OBBookChangesMsg* other) {
  std::swap(instrumentid_, other->instrumentid_);
  std::swap(bidtype_, other->bidtype_);
  std::swap(asktype_, other->asktype_);
  std::swap(bidprice_, other->bidprice_);
  std::swap(bidvolume_, other->bidvolume_);
  std::swap(prevbidprice_, other->prevbidprice_);
  std::swap(prevbidvolume_, other->prevbidvolume_);
  std::swap(askprice_, other->askprice_);
  std::swap(askvolume_, other->askvolume_);
  std::swap(prevaskprice_, other->prevaskprice_);
  std::swap(prevaskvolume_, other->prevaskvolume_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OBBookChangesMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OBBookChangesMsg_descriptor_;
  metadata.reflection = OBBookChangesMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OBBookChangesMsg

// optional uint64 instrumentId = 3;
void OBBookChangesMsg::clear_instrumentid() {
  instrumentid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OBBookChangesMsg::instrumentid() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.instrumentId)
  return instrumentid_;
}
void OBBookChangesMsg::set_instrumentid(::google::protobuf::uint64 value) {
  
  instrumentid_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.instrumentId)
}

// optional .oli.msg.OBookChangeType bidType = 4;
void OBBookChangesMsg::clear_bidtype() {
  bidtype_ = 0;
}
::oli::msg::OBookChangeType OBBookChangesMsg::bidtype() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.bidType)
  return static_cast< ::oli::msg::OBookChangeType >(bidtype_);
}
void OBBookChangesMsg::set_bidtype(::oli::msg::OBookChangeType value) {
  
  bidtype_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.bidType)
}

// optional .oli.msg.OBookChangeType askType = 5;
void OBBookChangesMsg::clear_asktype() {
  asktype_ = 0;
}
::oli::msg::OBookChangeType OBBookChangesMsg::asktype() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.askType)
  return static_cast< ::oli::msg::OBookChangeType >(asktype_);
}
void OBBookChangesMsg::set_asktype(::oli::msg::OBookChangeType value) {
  
  asktype_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.askType)
}

// optional uint32 bidPrice = 6;
void OBBookChangesMsg::clear_bidprice() {
  bidprice_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::bidprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.bidPrice)
  return bidprice_;
}
void OBBookChangesMsg::set_bidprice(::google::protobuf::uint32 value) {
  
  bidprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.bidPrice)
}

// optional uint32 bidVolume = 7;
void OBBookChangesMsg::clear_bidvolume() {
  bidvolume_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::bidvolume() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.bidVolume)
  return bidvolume_;
}
void OBBookChangesMsg::set_bidvolume(::google::protobuf::uint32 value) {
  
  bidvolume_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.bidVolume)
}

// optional uint32 prevBidPrice = 8;
void OBBookChangesMsg::clear_prevbidprice() {
  prevbidprice_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::prevbidprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.prevBidPrice)
  return prevbidprice_;
}
void OBBookChangesMsg::set_prevbidprice(::google::protobuf::uint32 value) {
  
  prevbidprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.prevBidPrice)
}

// optional uint32 prevBidVolume = 9;
void OBBookChangesMsg::clear_prevbidvolume() {
  prevbidvolume_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::prevbidvolume() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.prevBidVolume)
  return prevbidvolume_;
}
void OBBookChangesMsg::set_prevbidvolume(::google::protobuf::uint32 value) {
  
  prevbidvolume_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.prevBidVolume)
}

// optional uint32 askPrice = 10;
void OBBookChangesMsg::clear_askprice() {
  askprice_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::askprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.askPrice)
  return askprice_;
}
void OBBookChangesMsg::set_askprice(::google::protobuf::uint32 value) {
  
  askprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.askPrice)
}

// optional uint32 askVolume = 11;
void OBBookChangesMsg::clear_askvolume() {
  askvolume_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::askvolume() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.askVolume)
  return askvolume_;
}
void OBBookChangesMsg::set_askvolume(::google::protobuf::uint32 value) {
  
  askvolume_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.askVolume)
}

// optional uint32 prevAskPrice = 12;
void OBBookChangesMsg::clear_prevaskprice() {
  prevaskprice_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::prevaskprice() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.prevAskPrice)
  return prevaskprice_;
}
void OBBookChangesMsg::set_prevaskprice(::google::protobuf::uint32 value) {
  
  prevaskprice_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.prevAskPrice)
}

// optional uint32 prevAskVolume = 13;
void OBBookChangesMsg::clear_prevaskvolume() {
  prevaskvolume_ = 0u;
}
::google::protobuf::uint32 OBBookChangesMsg::prevaskvolume() const {
  // @@protoc_insertion_point(field_get:oli.msg.OBBookChangesMsg.prevAskVolume)
  return prevaskvolume_;
}
void OBBookChangesMsg::set_prevaskvolume(::google::protobuf::uint32 value) {
  
  prevaskvolume_ = value;
  // @@protoc_insertion_point(field_set:oli.msg.OBBookChangesMsg.prevAskVolume)
}

inline const OBBookChangesMsg* OBBookChangesMsg::internal_default_instance() {
  return &OBBookChangesMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace oli

// @@protoc_insertion_point(global_scope)
